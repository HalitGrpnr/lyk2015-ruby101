var slides = [
	"<div class=\"slide slide-1 master-title\">\n<div class=\"slide-wrapper \">\n\t<div class=\"colors\">\n\t<span class=\"color-1\"></span>\n\t<span class=\"color-2\"></span>\n\t<span class=\"color-3\"></span>\n\t<span class=\"color-4\"></span>\n\t<span class=\"color-5\"></span>\n</div>\n<div class=\"slide-headers\">\n\t<div class=\"vertical-align\">\n\t\t\n\t\t<h1>Ruby 101</h1>\n\t\t\n\t\t\n\t\t<h2>Linux Yaz Kampı 2015</h2>\n\t\t\n\t\t</div>\n\t</div>\n</div>\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Serdar Doğruyol &amp; Barış Çimen </p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">1</span>\n\n\t</footer>\n</div>",
	"<div class=\"slide slide-2 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Eğitmen</h1>\n\n\n<h2>Serdar Doğruyol</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Yazılım Geliştirici ve Açık Kaynak Meraklısı</li>\n</ul>\n<ul>\n<li><a href=\"http://github.com/sdogruyol\" target=\"_blank\">github.com/sdogruyol</a></li>\n<li><a href=\"https://twitter.com/sdogruyol\" target=\"_blank\">@sdogruyol</a></li>\n<li><a href=\"http://www.serdardogruyol.com\" target=\"_blank\">serdardogruyol.com</a></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">2</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-3 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Eğitmen</h1>\n\n\n<h2>Barış Çimen</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><p>Yazılım Geliştirici</p>\n</li>\n<li><p><a href=\"https://github.com/barisizm\" target=\"_blank\">github.com/barisizm</a></p>\n</li>\n<li><a href=\"https://twitter.com/home_baris\" target=\"_blank\">@home_baris</a></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">3</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-4 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Eğitimin Amacı</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Katılmakta olduğunuz bu eğitim programı,</p>\n<p>Ruby’i diğer dillerden farklı kılan özellikler başta olmak üzere <strong>temel kavramların öğretilmesi</strong>, basit ve orta seviyede <strong>program yazabilme yeterliliğin kazandırılması</strong> ve katılımcıların gelişimlerine devam edebilmeleri için <strong>gerekli alt yapının oluşturulması</strong>nı amaçlamaktadır.</p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">4</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-5 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Ruby.is_a? “Programming Language”</h1>\n\n\n<h2># =&gt; true</h2>\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<ul>\n<li><strong>1993</strong><br />Geliştirilmeye başlandı</li>\n<li><strong>1995</strong><br />İlk defa yayınlandı</li>\n<li><strong>2004</strong><br />Ruby on Rails</li>\n<li><strong>2013</strong><br />Ruby 2.0 &amp; Ruby 2.1</li>\n<li><strong>2014</strong><br />Ruby 2.2</li>\n</ul>\n\n</div>\n\n<div class=\"column column-2\">\n<p><img src=\"images/sumo_19669e684d7e08a865ef157496ff0b299de44e51.jpg\" alt=\"made_in_japan?\" /></p>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">5</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-6 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Ruby.made_by_a? “Japanese”</h1>\n\n\n<h2># =&gt; true</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p><img src=\"images/matz_800_9d974931ae5b536cdd0370b850a8ac9683c0abe8.jpg\" alt=\"Alternate Text\" width=\"600\" height=\"300\" /></p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p><em>Yukihiro Matsumoto - Matz </em>                         </p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">6</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-7 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Ruby.users.include? </h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">users</span> <span class=\"cm-operator\">=</span> [\n  <span class=\"cm-string\">\"Basecamp\"</span>,   <span class=\"cm-string\">\"Nasa\"</span>,    <span class=\"cm-string\">\"Google SketchUp\"</span>,\n  <span class=\"cm-string\">\"GitHub\"</span>,     <span class=\"cm-string\">\"Shopify\"</span>, <span class=\"cm-string\">\"SlideShare\"</span>,\n  <span class=\"cm-string\">\"SoundCloud\"</span>, <span class=\"cm-string\">\"Hulu\"</span>, <span class=\"cm-operator\">...</span>\n]</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">users</span> <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-string\">\"You\"</span>\n<span class=\"cm-variable\">users</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">include?</span> <span class=\"cm-string\">\"You\"</span>  <span class=\"cm-comment\"># =&gt; true</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">7</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-8 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>You.should_use?</h1>\n\n\n<h2># =&gt; true * Float::INFINITY</h2>\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<ul>\n<li>Tamamıyla Nesne Yönelimli *</li>\n<li>Yorumlamalı (interpreted)</li>\n<li>Açık Kaynak</li>\n<li>Dinamik Tipleme</li>\n<li>Geniş Standart Kütüphane</li>\n</ul>\n\n</div>\n\n<div class=\"column column-2\">\n<ul>\n<li>Paket Yöneticisi (RubyGems)</li>\n<li>Ruby on Rails, Sinatra, …</li>\n<li>Tutkun Bir Topluluk</li>\n<li>MetaProgramming, DSL, …</li>\n<li>DRY, TIMTOWTDI, Least Surprise…</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">8</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-9 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Ruby.philosophies.first</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>“Perl’den daha güçlü, Python’dan daha nesne yönelimli bir betik dili istiyordum.  Kendi dilimi tasarlamamın nedeni budur.” <em>—Matz</em></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">Perl</span> <span class=\"cm-operator\">+</span> <span class=\"cm-tag\">SmallTalk</span> <span class=\"cm-operator\">+</span> <span class=\"cm-tag\">Python</span> <span class=\"cm-operator\">+</span> <span class=\"cm-tag\">Lisp</span> <span class=\"cm-operator\">+</span> <span class=\"cm-tag\">Ada</span> <span class=\"cm-operator\">+</span> <span class=\"cm-operator\">...</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Ruby</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">9</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-10 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Ruby.philosophies[1]</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>“Ruby tıpkı insan vücudu gibi, görünüşte basit, ama içinde çok kompleks bir yapıya sahiptir” <em>—Matz</em></p>\n<p><img src=\"images/Ruby_ebbdad3edb5f275c0fdb4c85996d105723770966.png\" width=\"500\" height=\"250\" /></p>\n<h6 id=\"kaynak-http-skilldrick-co-uk-2011-08-understanding-the-ruby-object-model-\">Kaynak: <a href=\"http://skilldrick.co.uk/2011/08/understanding-the-ruby-object-model/\" target=\"_blank\">http://skilldrick.co.uk/2011/08/understanding-the-ruby-object-model/</a></h6>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">10</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-11 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Ruby.philosophies[2 .. -1]</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<blockquote>\n<p>“Bizler efendiyiz, onlar(makineler) köleler…”<em>—Matz</em></p>\n<p>“Ben, insanların programlama yaparken, programlama dili ile savaşmak yerine, düşüncelerini aktarmak istediklerini düşünüyorum. Programlama dilleri, programcılara doğal görünmelidir. Ben, insanların Ruby’i kullanırken programlamadan zevk almalarını ve programcılığın yaratıcı kısmına odaklanmalarını sağlamaya çalıştım.” <em>—Matz</em></p>\n</blockquote>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">11</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-12 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Bla bla bla…</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<blockquote>\n<p>“Talk is cheap. Show me the code.”<br />— Linus Torwalds</p>\n</blockquote>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">12</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-13 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Tanışma Turu</h1>\n\n\n<h2>Çalışma Ortamı ve İlk Adımlar</h2>\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<ul>\n<li>IRB ve REPL</li>\n<li>Değişkenler ve Kapsamları</li>\n<li>True, False ve Nil</li>\n<li>Metotlarla Tanışma</li>\n<li>İsimlendirme Kuralları</li>\n</ul>\n\n</div>\n\n<div class=\"column column-2\">\n<ul>\n<li>Kodun Çalıştırılması</li>\n<li>Dosya Yükleme</li>\n<li>Paket Yönetimi (RubyGems)</li>\n<li>Uygulama İskeleti Oluşturma</li>\n<li>Dokümantasyon</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">13</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-14 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>IRB ve REPL İşlemleri</h1>\n\n\n<h2>Interactive Ruby</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ irb\n\nirb(main):001:0&gt; 2 + 2\n=&gt; 4\n\nirb(main):002:0&gt; exit</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ irb --simple-prompt\n\n&gt;&gt; 2.class\n=&gt; Fixnum</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">14</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-15 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Mantıksal İfadeler</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>false ve nil - <strong>false</strong></li>\n<li>false ve nil dışında her şey - <strong>true</strong></li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-number\">3</span> <span class=\"cm-operator\">&gt;</span> <span class=\"cm-number\">5</span>    <span class=\"cm-comment\"># =&gt; false</span>\n<span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-number\">3</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-number\">5</span>    <span class=\"cm-comment\"># =&gt; true</span>\n\n<span class=\"cm-operator\">&gt;&gt;</span> !<span class=\"cm-number\">3</span>       <span class=\"cm-comment\"># =&gt; false</span>\n<span class=\"cm-operator\">&gt;&gt;</span> !!<span class=\"cm-number\">3</span>      <span class=\"cm-comment\"># =&gt; true</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">15</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-16 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Mantıksal İfadeler</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><p>Diğer dillerdeki null, undefined, vb… - <strong>nil</strong></p>\n</li>\n<li><p>Ruby’de mantıksal değerler ile alakalı <strong>Boolean</strong> veya <strong>Bool</strong> gibi bir sınıf bulunmaz</p>\n</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-keyword\">true</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span>     <span class=\"cm-comment\"># =&gt; TrueClass</span>\n<span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-keyword\">false</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span>    <span class=\"cm-comment\"># =&gt; FalseClass</span>\n<span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-keyword\">nil</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span>      <span class=\"cm-comment\"># =&gt; NilClass</span></pre>\n<ul>\n<li>Kullanılabilecek Operatörler: <strong>&amp;&amp; || ! and or not</strong></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">16</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-17 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Metotlarla Tanışma</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Metot tanımlaması <strong>def</strong> ile başlar, <strong>end</strong> ile biter.</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">metot_adi</span>(<span class=\"cm-variable\">parametre1</span>, <span class=\"cm-variable\">parametre2</span>, <span class=\"cm-operator\">...</span>)\n  <span class=\"cm-operator\">...</span>\n<span class=\"cm-keyword\">end</span></pre>\n<ul>\n<li>Parantez kullanımı (çoğunlukla) zorunlu değildir.</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">metot_adi</span> <span class=\"cm-variable\">parametre1</span>, <span class=\"cm-variable\">parametre2</span>, <span class=\"cm-operator\">...</span>\n  <span class=\"cm-operator\">...</span>\n<span class=\"cm-keyword\">end</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">17</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-18 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Metotlarla Tanışma</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Geri dönüş değeri belirtmek için <strong>return</strong> deyimi kullanılır. Ancak buna çoğu zaman gerek kalmaz.</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">topla</span> <span class=\"cm-variable\">sayi1</span>, <span class=\"cm-variable\">sayi2</span>\n  <span class=\"cm-variable\">sayi1</span> <span class=\"cm-operator\">+</span> <span class=\"cm-variable\">sayi2</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-variable\">topla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>)  <span class=\"cm-comment\"># =&gt; 8</span>\n<span class=\"cm-variable\">topla</span> <span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>   <span class=\"cm-comment\"># =&gt; 8</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">18</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-19 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Metotlarla Tanışma</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Bir metodun ismi <strong>?</strong>, <strong>!</strong> veya <strong>=</strong> karakterlerinden biriyle bitiyorsa; özel bir anlamı bulunur:</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-comment\"># genellikle çağıran nesne üzerinde işlem yapar</span>\n<span class=\"cm-variable\">tehlikeli!</span>\n\n<span class=\"cm-comment\"># true veya false değer döndürür</span>\n<span class=\"cm-variable\">sorgulama?</span>\n\n<span class=\"cm-comment\"># Bir değişkenin değerini değiştirmeye yönelik olarak kullanılır</span>\n<span class=\"cm-variable\">deger_degisikli</span>ğ<span class=\"cm-variable\">i</span><span class=\"cm-operator\">=</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">19</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-20 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>İsimlendirme Kuralları</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Sabit isimleri <strong>BÜYÜK</strong> harfle başlar (Ruby’de sınıf ve modül isimleri de birer sabittir)</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">  <span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">SinifAdi</span> <span class=\"cm-operator\">...</span>\n  <span class=\"cm-keyword\">module</span> <span class=\"cm-tag\">ModulAdi</span> <span class=\"cm-operator\">...</span>\n  <span class=\"cm-tag\">PI</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">3.141592653589793</span></pre>\n<ul>\n<li>Yerel değişkenler <strong>küçük</strong> harf veya <strong>_</strong> ile başlar</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">  <span class=\"cm-variable\">yerel_degisken</span>\n  <span class=\"cm-variable\">plaka</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">61</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">20</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-21 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>İsimlendirme Kuralları</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Global değişkenler, yerel değişkenlere ek olarak <strong>$</strong> karakteri ile başlar</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">  <span class=\"cm-variable-3\">$global_degisken</span></pre>\n<ul>\n<li>Örnek(instance) değişkenleri <strong>@</strong> karakteriyle, sınıf değişkenleri <strong>@@</strong> karakterleriyle başlar</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">  <span class=\"cm-variable-2\">@ornek_degiskeni</span>\n  <span class=\"cm-variable-2\">@@sinif_degiskeni</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">21</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-22 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Programı Çalıştırma</h1>\n\n\n<h2>Ruby Yorumlayıcısının Kullanımı</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ ruby -e \"puts 'Merhaba!'\"    # Merhaba!\n\n$ ruby -e \"puts 'Merhaba!'\" -e \"puts \"'Hoşçakal!'\" \n# Merhaba!\n# Hoşçakal!\n\n$ ruby \"22-temeller.rb\"\n. . . \n\n$ ruby -c 22-temeller.rb\nSyntax OK</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">22</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-23 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Başka Bir Dosyanın Dahil Edilmesi</h1>\n\n\n<h2>load</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Bir dosyayı, başka bir dosya içerisine yükleme</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-comment\"># 23-harici_dosya.rb</span>\n<span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Merhaba, ben harici bir dosyayım.\"</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-comment\"># 23-calistigimiz_dosya.rb</span>\n<span class=\"cm-keyword\">load</span> <span class=\"cm-string\">\"23-harici_dosya.rb\"</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ ruby 23-calistigimiz_dosya.rb \nMerhaba, ben harici bir dosyayım.</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">23</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-24 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Başka Bir Dosyanın Dahil Edilmesi</h1>\n\n\n<h2>load</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>irb içerisinde kullanım</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-keyword\">load</span> <span class=\"cm-string\">\"23-harici_dosya.rb\"</span>\n<span class=\"cm-tag\">Merhaba</span>, <span class=\"cm-variable\">ben</span> <span class=\"cm-variable\">harici</span> <span class=\"cm-variable\">bir</span> <span class=\"cm-variable\">dosyay</span>ı<span class=\"cm-variable\">m</span><span class=\"cm-operator\">.</span>\n<span class=\"cm-operator\">=&gt;</span> <span class=\"cm-keyword\">true</span>\n\n\n<span class=\"cm-comment\"># Düzenlemeden sonra ikinci defa yükleme</span>\n<span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-keyword\">load</span> <span class=\"cm-string\">\"23-harici_dosya.rb\"</span>\n<span class=\"cm-tag\">Merhaba</span>, <span class=\"cm-variable\">ben</span> <span class=\"cm-variable\">harici</span> <span class=\"cm-variable\">bir</span> <span class=\"cm-variable\">dosyay</span>ı<span class=\"cm-variable\">m</span> <span class=\"cm-variable\">ve</span> <span class=\"cm-variable\">i</span>ç<span class=\"cm-variable\">eri</span>ğ<span class=\"cm-variable\">im</span> <span class=\"cm-variable\">az</span> ö<span class=\"cm-variable\">nce</span> <span class=\"cm-variable\">d</span>ü<span class=\"cm-variable\">zenlendi</span><span class=\"cm-operator\">.</span>\n<span class=\"cm-operator\">=&gt;</span> <span class=\"cm-keyword\">true</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">24</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-25 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Başka Bir Dosyanın Dahil Edilmesi</h1>\n\n\n<h2>require</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Bir dosyayı, başka bir dosya içerisine yükleme</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-comment\"># 23-harici_dosya.rb</span>\n<span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Merhaba, ben harici bir dosyayım.\"</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-comment\"># 25-calistigimiz_dosya.rb</span>\n<span class=\"cm-keyword\">require</span> <span class=\"cm-string\">\"23-harici_dosya.rb\"</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable-3\">$ </span><span class=\"cm-variable\">ruby</span> <span class=\"cm-number\">25</span><span class=\"cm-operator\">-</span><span class=\"cm-variable\">calistigimiz_dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">rb</span> \n<span class=\"cm-comment\"># ... 'require': cannot load such file -- 23-harici_dosya.rb (LoadError)</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">25</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-26 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Başka Bir Dosyanın Dahil Edilmesi</h1>\n\n\n<h2>require &amp; require_relative</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Bir dosyayı, başka bir dosya içerisine yükleme</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-comment\"># 26-calistigimiz_dosya.rb</span>\n<span class=\"cm-keyword\">require</span> <span class=\"cm-string\">\"./23-harici_dosya\"</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-comment\"># 26-calistigimiz_dosya.rb</span>\n<span class=\"cm-keyword\">require_relative</span> <span class=\"cm-string\">\"23-harici_dosya\"</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ ruby 26-calistigimiz_dosya.rb \nMerhaba, ben harici bir dosyayım.</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">26</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-27 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Başka Bir Dosyanın Dahil Edilmesi</h1>\n\n\n<h2>load vs require</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><p>load kullanılarak aynı dosya birden fazla yüklenebilir, require dosyayı sadece bir kere yükler.</p>\n</li>\n<li><p>load kullanırken dosya uzantısı belirtilmek zorundadır, require için bu gerekli değildir.</p>\n</li>\n<li><p>require dosyayı bulmak için tanımlı olan bütün yolları arar:</p>\n</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-tag\">ENV</span>[<span class=\"cm-string\">'PATH'</span>]\n<span class=\"cm-comment\">#=&gt;\"/home/sb/.rbenv/versions/2.1.0/bin:/home/sb/.rbenv/libexec:/home/sb/.rbenv/plugins/ruby-build/bin:/home/sb/.rbenv/plugins/ruby-build/bin:/home/sb/...\"</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">27</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-28 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Başka Bir Dosyanın Dahil Edilmesi</h1>\n\n\n<h2>autoload</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Dosyanın kullanıldığı anda otomatik olarak yüklenmesi</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-comment\"># 28-yukleme.rb</span>\n<span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"* 28-yukleme.rb dosyası yüklendi! *\"</span>\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Yukleme</span>; <span class=\"cm-keyword\">end</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-comment\"># 28-autoload.rb</span>\n<span class=\"cm-keyword\">autoload</span>(<span class=\"cm-atom\">:Yukleme</span>, <span class=\"cm-string\">'./28-yukleme.rb'</span>)\n<span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"- Autoload'dan sonra...\"</span>\n\n<span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"- Sınıf birazdan kullanılacak...\"</span>\n<span class=\"cm-variable\">yukleme</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Yukleme</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>\n<span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"- Sınıf kullanıldı.\"</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">28</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-29 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Paket Yönetimi</h1>\n\n\n<h2>RubyGems</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Versiyon bilgisi için:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ gem -v\n2.2.2</pre>\n<p>Paket yüklemek için:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable-3\">$ </span><span class=\"cm-variable\">gem</span> <span class=\"cm-variable\">install</span> <span class=\"cm-variable\">paket</span></pre>\n<p>Paket kaldırmak için:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable-3\">$ </span><span class=\"cm-variable\">gem</span> <span class=\"cm-variable\">uninstall</span> <span class=\"cm-variable\">paket</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">29</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-30 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Paket Yönetimi</h1>\n\n\n<h2>RubyGems</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Yüklü paketler</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable-3\">$ </span><span class=\"cm-variable\">gem</span> <span class=\"cm-variable\">list</span>\n\n<span class=\"cm-operator\">***</span> <span class=\"cm-tag\">LOCAL</span> <span class=\"cm-tag\">GEMS</span> <span class=\"cm-operator\">***</span>\n<span class=\"cm-variable\">actionmailer</span> (<span class=\"cm-number\">4.1</span><span class=\"cm-operator\">.</span><span class=\"cm-number\">6</span>, <span class=\"cm-number\">4.1</span><span class=\"cm-operator\">.</span><span class=\"cm-number\">4</span>, <span class=\"cm-number\">4.1</span><span class=\"cm-operator\">.</span><span class=\"cm-number\">1</span>, <span class=\"cm-number\">4.0</span><span class=\"cm-operator\">.</span><span class=\"cm-number\">0</span>)\n<span class=\"cm-variable\">actionpack</span> (<span class=\"cm-number\">4.1</span><span class=\"cm-operator\">.</span><span class=\"cm-number\">6</span>, <span class=\"cm-number\">4.1</span><span class=\"cm-operator\">.</span><span class=\"cm-number\">4</span>, <span class=\"cm-number\">4.1</span><span class=\"cm-operator\">.</span><span class=\"cm-number\">1</span>, <span class=\"cm-number\">4.0</span><span class=\"cm-operator\">.</span><span class=\"cm-number\">0</span>)\n<span class=\"cm-operator\">...</span></pre>\n<p>Yüklenebilecek paketler</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable-3\">$ </span><span class=\"cm-variable\">gem</span> <span class=\"cm-variable\">list</span> <span class=\"cm-operator\">--</span><span class=\"cm-variable\">remote</span> <span class=\"cm-variable\">veya</span> <span class=\"cm-operator\">-</span><span class=\"cm-variable\">r</span>\n\n<span class=\"cm-operator\">***</span> <span class=\"cm-tag\">REMOTE</span> <span class=\"cm-tag\">GEMS</span> <span class=\"cm-operator\">***</span>\n<span class=\"cm-operator\">...</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">30</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-31 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Paket Yönetimi</h1>\n\n\n<h2>RubyGems</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Yüklenen Paketin Kullanılması    </p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable-3\">$ </span><span class=\"cm-variable\">gem</span> <span class=\"cm-variable\">install</span> <span class=\"cm-variable\">paket</span>\n<span class=\"cm-operator\">...</span></pre>\n<p>Dosya içerisinde</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">require</span> <span class=\"cm-string\">'paket'</span></pre>\n<ul>\n<li>Kaynak Paket Siteleri<ul>\n<li><a href=\"http://www.rubygems.org\" target=\"_blank\">RubyGems</a></li>\n<li><a href=\"https://www.ruby-toolbox.com\" target=\"_blank\">RubyToolbox</a></li>\n</ul>\n</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">31</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-32 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Paket Yönetimi</h1>\n\n\n<h2>Bundler <a href=\"http://bundler.io\" target=\"_blank\">bundler.io</a></h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ gem install bundler</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-comment\"># Gemfile</span>\n<span class=\"cm-variable\">source</span> <span class=\"cm-string\">'http://rubygems.org'</span>\n\n<span class=\"cm-variable\">gem</span> <span class=\"cm-string\">'paket_1'</span>\n<span class=\"cm-variable\">gem</span> <span class=\"cm-string\">'paket_2'</span>\n<span class=\"cm-operator\">...</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ bundle install\n...\nn gems installed</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">32</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-33 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dokümantasyon</h1>\n\n\n<h2>rdoc ve ri</h2>\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<ul>\n<li><a href=\"http://ruby-doc.org\" target=\"_blank\">RubyDoc</a></li>\n<li>Çevrimdışı</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ ri Class\n$ ri Class.method\n$ ri Class#method\n$ ri Module::method\n$ ...</pre>\n\n</div>\n\n<div class=\"column column-2\">\n<ul>\n<li>Problem yaşanırsa</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ gem install rdoc-data\n$ rdoc-data --install\n\n$ gem rdoc --all --overwrite</pre>\n<ul>\n<li>Dokümantasyonların yüklenmemesi için</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">--no-rdoc --no-ri\n--no-doc</pre>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">33</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-34 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dokümantasyon</h1>\n\n\n<h2>pry-doc</h2>\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ gem install pry pry-doc</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ pry\n[1] pry(main)&gt; show-doc Hash#to_a\n\nFrom: hash.c (C Method):\nOwner: Hash\nVisibility: public\n...\n\nConverts hsh to a nested array of [ key,\nvalue ] arrays.\n\n   h = { \"c\" =&gt; 300, \"a\" =&gt; 100, \"d\" =&gt; 400, \"c\" =&gt; 300  }\n...</pre>\n\n</div>\n\n<div class=\"column column-2\">\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">[2] pry(main)&gt; show-source Hash#to_a\nFrom: hash.c (C Method):\nOwner: Hash\nVisibility: public\nNumber of lines: 11\n\nstatic VALUE\nrb_hash_to_a(VALUE hash)\n{\n    VALUE ary;\n\n    ary = rb_ary_new_capa(RHASH_SIZE(hash));\n...\n}</pre>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">34</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-35 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Temel Veri Türleri</h1>\n\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<ul>\n<li>Girdi Çıktı İşlemleri</li>\n<li>Sayılar</li>\n<li>Metinler</li>\n<li>Semboller</li>\n<li>Düzenli İfadeler    </li>\n</ul>\n\n</div>\n\n<div class=\"column column-2\">\n<ul>\n<li>Aralıklar</li>\n<li>Diziler</li>\n<li>Sözlükler</li>\n<li>Uygulamalar</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">35</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-36 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Çıktı Metotları</h1>\n\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<ul>\n<li>puts(obj, …)</li>\n<li>print(obj, …)</li>\n<li>p(obj, …)</li>\n<li>printf(string [, obj … ])</li>\n<li>sprintf(format_string [, arguments…])</li>\n<li>putc(int)</li>\n</ul>\n\n</div>\n\n<div class=\"column column-2\">\n<p><strong>Çıktı Alan Ayracı (Varsayılan = <code>nil</code>)</strong><br /><code>$,</code><br /><code>$OUTPUT_FIELD_SEPARATOR</code>,  <code>$OFS</code></p>\n<p><strong>Çıktı Kayıt Ayracı (Varsayılan = <code>nil</code>)</strong><br /><code>$\\</code><br /><code>$OUTPUT_RECORD_SEPARATOR</code>, <code>$ORS</code></p>\n<p><strong>Geçerli Çıktı (Varsayılan = <code>$stdout</code>)</strong><br /><code>$&gt;</code><br /><code>$DEFAULT_OUTPUT</code></p>\n<p><em>require ‘English’</em></p>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">36</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-37 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Girdi Metotları</h1>\n\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<ul>\n<li><p>gets </p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">gets</span>(<span class=\"cm-variable\">sep</span><span class=\"cm-operator\">=</span><span class=\"cm-variable-3\">$/</span>)\n<span class=\"cm-variable\">gets</span>(<span class=\"cm-variable\">limit</span>)\n<span class=\"cm-variable\">gets</span>(<span class=\"cm-variable\">sep</span>,<span class=\"cm-variable\">limit</span>)</pre>\n</li>\n<li><p>readline</p>\n</li>\n<li>readlines</li>\n</ul>\n\n</div>\n\n<div class=\"column column-2\">\n<p><strong>Girdi Kayıt Ayracı (Varsayılan = <code>'\\n'</code>)</strong><br /><code>$/</code>, <code>$-0</code><br /><code>$INPUT_RECORD_SEPARATOR</code>, <code>$RS</code></p>\n<p><strong>Geçerli Girdi (Varsayılan = <code>$stdin</code>)</strong><br /><code>$&lt;</code><br /><code>$DEFAULT_INPUT</code></p>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">37</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-38 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Sayılar</h1>\n\n\n<h2>Numeric Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Tüm sayılar <strong>Numeric</strong> sınıfından türetilmiştir:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-number\">5</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span>                        <span class=\"cm-comment\"># =&gt; Fixnum</span>\n<span class=\"cm-number\">5</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">superclass</span>             <span class=\"cm-comment\"># =&gt; Integer</span>\n<span class=\"cm-number\">5</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">superclass</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">superclass</span>  <span class=\"cm-comment\"># =&gt; Numeric</span>\n<span class=\"cm-number\">3.14</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span>                     <span class=\"cm-comment\"># =&gt; Float</span>\n<span class=\"cm-number\">3.14</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">superclass</span>          <span class=\"cm-comment\"># =&gt; Numeric</span></pre>\n<p>Temel sayı tiplerine ek olarak; rasyonel sayılar için <strong>Rational</strong>, karmaşık sayılar için de <strong>Complex</strong> sınıfı kullanılabilmektedir.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">rasyonel</span> = <span class=\"cm-number\">2</span><span class=\"cm-operator\">/</span><span class=\"cm-number\">5</span><span class=\"cm-variable\">r</span>     <span class=\"cm-comment\"># =&gt; (2/5)</span>\n<span class=\"cm-variable\">rasyonel</span>.<span class=\"cm-keyword\">class</span>      <span class=\"cm-comment\"># =&gt; Rational</span>\n(<span class=\"cm-number\">2</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">3</span><span class=\"cm-variable\">i</span>).<span class=\"cm-keyword\">class</span>        <span class=\"cm-comment\"># =&gt; Complex</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">38</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-39 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Sayılar</h1>\n\n\n<h2>Numeric Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Ruby standart kütüphanesinde yer alan <strong>BigDecimal</strong> kütüphanesi Float veri tipi kullanıldığında karşılaşılacak olan yuvarlama hatalarından korunmayı sağlar</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-comment\"># Problem</span>\n<span class=\"cm-number\">0</span><span class=\"cm-operator\">.</span><span class=\"cm-number\">33</span> <span class=\"cm-operator\">*</span> <span class=\"cm-number\">10</span>   <span class=\"cm-comment\"># =&gt; 3.3000000000000003</span>\n\n<span class=\"cm-comment\"># Çözüm</span>\n<span class=\"cm-keyword\">require</span> <span class=\"cm-string\">\"bigdecimal\"</span>           <span class=\"cm-comment\"># =&gt; true</span>\n(<span class=\"cm-tag\">BigDecimal</span>(<span class=\"cm-string\">\"0.33\"</span>)<span class=\"cm-operator\">*</span><span class=\"cm-number\">10</span>)<span class=\"cm-operator\">.</span><span class=\"cm-variable\">to_f</span>   <span class=\"cm-comment\"># =&gt; 3.3</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">39</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-40 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Metinler</h1>\n\n\n<h2>String Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Metinleri tek tırnak veya çift tırnak arasında belirtiriz.</p>\n<p>Tüm metinler <strong>String</strong> sınıfından türetilmiştir.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-string\">\"metin\"</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span>    <span class=\"cm-comment\"># =&gt; String</span></pre>\n<p>Ruby 2.0 ve üstü versiyonlarda tüm metinler varsayılan olarak UTF-8 karakter kodlaması kullanırlar.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-string\">\"~ğ\"</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">encoding</span>     <span class=\"cm-comment\"># =&gt; #&lt;Encoding:UTF-8&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">40</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-41 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Metinler</h1>\n\n\n<h2>String Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Metinleri birleştirmek için <strong>+</strong> veya <strong>&lt;&lt;</strong> metodunu kullanabiliriz</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-string\">\"akademik \"</span> <span class=\"cm-operator\">+</span> <span class=\"cm-string\">\"bilişim\"</span>    <span class=\"cm-comment\"># =&gt; \"akademik bilişim\"</span>\n<span class=\"cm-string\">\"akademik \"</span> <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-string\">\"bilişim\"</span>   <span class=\"cm-comment\"># =&gt; \"akademik bilişim\"</span></pre>\n<p>Metinleri birleştirmek veya içerisine kod gömmek amacıyla <strong>#{ }</strong> kullanılabilir </p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"#{</span><span class=\"cm-string\">'akademik'</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">capitalize</span><span class=\"cm-string\">} #{</span><span class=\"cm-string\">'bilişim'</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">upcase</span><span class=\"cm-string\">}\"</span>\n<span class=\"cm-comment\"># Akademik BILIşIM</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">41</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-42 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Metinler</h1>\n\n\n<h2>String Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Türkçe karakter desteği için <strong>TurkishSupport</strong> paketini kullanabiliriz: <a href=\"https://github.com/sbagdat/turkish_support\" target=\"_blank\">https://github.com/sbagdat/turkish_support</a></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ gem install turkish_support</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">require</span> <span class=\"cm-string\">'turkish_support'</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Test</span>\n  <span class=\"cm-variable\">using</span> <span class=\"cm-tag\">TurkishSupport</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">up_me</span>(<span class=\"cm-variable\">str</span>)\n    <span class=\"cm-variable\">str</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">upcase</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-tag\">Test</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">up_me</span>(<span class=\"cm-string\">'eskişehir'</span>)  <span class=\"cm-comment\">#=&gt; \"ESKİŞEHİR\"</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">42</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-43 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Metinler</h1>\n\n\n<h2>String Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n<p>Türkçe karakter desteği için <strong>UnicodeUtils</strong> paketini de  kullanabiliriz</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">$ gem install unicode_utils</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">require</span> <span class=\"cm-string\">\"unicode_utils\"</span>\n<span class=\"cm-variable\">puts</span> <span class=\"cm-tag\">UnicodeUtils</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">upcase</span>(<span class=\"cm-string\">\"Bilişim\"</span>, <span class=\"cm-atom\">:tr</span>)     <span class=\"cm-comment\"># \"BİLİŞİM\"</span></pre>\n<p>Metinlerle birlikte kullanabileceğimiz 164 adet* metot mevcuttur (2.1.2 versiyonu için)</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-string\">\"\"</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">methods</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">size</span> <span class=\"cm-comment\"># =&gt; 164</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">43</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-44 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Semboller</h1>\n\n\n<h2>Symbol Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Semboller oluşturulurken isimlerinin başına <strong>:</strong> karakterleri eklenir</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-atom\">:sembol</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span>    <span class=\"cm-comment\"># =&gt; Symbol</span></pre>\n<p>Semboller metinlere oldukça benzerler. Aralarındaki en temel fark; metinlerin içeriği aynı dahi olsa her defasında yeniden oluşturulmalarına karşın; sembollerin sadece bir defa oluşturulmalarıdır.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-string\">\"metin\"</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">object_id</span>      <span class=\"cm-comment\"># =&gt; 70180201977620</span>\n<span class=\"cm-string\">\"metin\"</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">object_id</span>      <span class=\"cm-comment\"># =&gt; 70180201236580</span>\n\n<span class=\"cm-atom\">:sembol</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">object_id</span>      <span class=\"cm-comment\"># =&gt; 541448</span>\n<span class=\"cm-atom\">:sembol</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">object_id</span>      <span class=\"cm-comment\"># =&gt; 541448</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">44</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-45 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Semboller</h1>\n\n\n<h2>Symbol Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Metinlerin aksine semboller değiştirilemezdir. Metinleri de bu şekilde kullanabilmek için <strong>freeze</strong> metodundan yararlanılabilir </p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">metin</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">\"Ruby\"</span>\n<span class=\"cm-variable\">metin</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">freeze</span>\n<span class=\"cm-variable\">metin</span> <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-string\">\" on Rails\"</span>\n<span class=\"cm-comment\"># RuntimeError: can't modify frozen String</span></pre>\n<p>Bir metni sembole dönüştürmek için <strong>to_sym</strong> metodu, tersi için de <strong>to_s</strong> metodunu kullanılabilir</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">\n<span class=\"cm-string\">\"metin\"</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">to_sym</span>    <span class=\"cm-comment\"># =&gt; :metin</span>\n<span class=\"cm-atom\">:metin</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">to_s</span>       <span class=\"cm-comment\"># =&gt; \"metin\"</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">45</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-46 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Düzenli İfadeler</h1>\n\n\n<h2>Regexp Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Düzenli ifadeler iki tane <strong>/</strong> karakteri arasına yazılır</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-string-2\">/.../</span></pre>\n<p><a href=\"http://doc.infosnel.nl/ruby_regular_expressions.html\" target=\"_blank\">Kullanılabilecek özel Karakterler listesi</a></p>\n<p>Bir metnin, düzenli ifade ile eşleşip eşleşmediğini anlamak için <strong>=~</strong> veya <strong>match</strong> metodu kullanılabilir</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-string-2\">/@/</span> !<span class=\"cm-operator\">~</span> <span class=\"cm-string\">\"kullanici@eposta.com\"</span>  <span class=\"cm-comment\"># =&gt; false</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">46</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-47 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Aralıklar</h1>\n\n\n<h2>Range Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Başlangıç ve bitiş değerleri arasında kalan tüm değerleri içeren bir aralık oluşturulmasını sağlar</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">baslangic</span><span class=\"cm-operator\">..</span><span class=\"cm-variable\">bitis</span>\n\n<span class=\"cm-number\">1</span><span class=\"cm-operator\">..</span><span class=\"cm-number\">10</span>            <span class=\"cm-comment\"># =&gt; 1..10</span>\n(<span class=\"cm-number\">1</span><span class=\"cm-operator\">..</span><span class=\"cm-number\">10</span>)<span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span>    <span class=\"cm-comment\">#=&gt; Range</span></pre>\n<p>Başlangıç ve bitiş değerleri arasında üç nokta bulunması durumunda son değer aralığa dahil edilmez</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">baslangic</span><span class=\"cm-operator\">..</span><span class=\"cm-variable\">bitis</span>\n\n<span class=\"cm-number\">1</span><span class=\"cm-operator\">..</span><span class=\"cm-number\">10</span>            <span class=\"cm-comment\"># =&gt; 1,2,3,...,9,10</span>\n<span class=\"cm-number\">1</span><span class=\"cm-operator\">...</span><span class=\"cm-number\">10</span>           <span class=\"cm-comment\"># =&gt; 1,2,3,...,9</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">47</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-48 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Aralıklar</h1>\n\n\n<h2>Range Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Aralıklar <strong>to_a</strong> metodu ile dizilere dönüştürülebilir</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">(<span class=\"cm-number\">1</span><span class=\"cm-operator\">..</span><span class=\"cm-number\">5</span>)<span class=\"cm-operator\">.</span><span class=\"cm-variable\">to_a</span>         <span class=\"cm-comment\"># =&gt; [1, 2, 3, 4, 5]</span>\n(<span class=\"cm-string\">\"a\"</span><span class=\"cm-operator\">..</span><span class=\"cm-string\">\"f\"</span>)<span class=\"cm-operator\">.</span><span class=\"cm-variable\">to_a</span>     <span class=\"cm-comment\"># =&gt; [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]</span></pre>\n<p>Aralıklar da <strong>Enumerable</strong> modülünü içerirler</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">(<span class=\"cm-number\">1</span><span class=\"cm-operator\">..</span><span class=\"cm-number\">10</span>)<span class=\"cm-operator\">.</span><span class=\"cm-variable\">step</span>(<span class=\"cm-number\">4</span>) {|<span class=\"cm-def\">i</span>| <span class=\"cm-variable\">puts</span> <span class=\"cm-variable\">i</span>}\n<span class=\"cm-comment\"># 1</span>\n<span class=\"cm-comment\"># 5</span>\n<span class=\"cm-comment\"># 9</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">48</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-49 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Diziler</h1>\n\n\n<h2>Array Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Diziler, Array sınıfı kullanılarak üretilirler</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">dizi</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Array</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>    <span class=\"cm-comment\"># =&gt; []</span></pre>\n<p>Dizi içeriği karışık türden nesneler olabilir</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">dizi</span> <span class=\"cm-operator\">=</span> [<span class=\"cm-string\">\"ali\"</span>, <span class=\"cm-number\">12</span>, <span class=\"cm-keyword\">true</span>, <span class=\"cm-string-2\">/\\Aab\\Z/</span>, [<span class=\"cm-number\">1</span>,<span class=\"cm-number\">2</span>,<span class=\"cm-number\">3</span>]]</pre>\n<p>Dizi elemanlarına <strong>[ ]</strong> kullanılarak erişilebilir (indeksler 0’dan başlar)</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">dizi</span>[<span class=\"cm-number\">1</span>]      <span class=\"cm-comment\"># =&gt; 12</span>\n<span class=\"cm-variable\">dizi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">first</span>   <span class=\"cm-comment\"># =&gt; \"ali\"</span>\n<span class=\"cm-variable\">dizi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">last</span>    <span class=\"cm-comment\"># =&gt; [1,2,3]</span>\n<span class=\"cm-variable\">dizi</span>[<span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>]     <span class=\"cm-comment\"># =&gt; [1,2,3]</span>\n<span class=\"cm-variable\">dizi</span>[<span class=\"cm-number\">0</span><span class=\"cm-operator\">..</span><span class=\"cm-number\">2</span>]   <span class=\"cm-comment\"># =&gt; [\"ali\", 12, true]</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">49</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-50 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Diziler</h1>\n\n\n<h2>Array Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Diziler de metinler gibi <strong>+</strong> veya <strong>&lt;&lt;</strong> metotları kullanılarak birleştirilebilirler:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">dizi1</span> <span class=\"cm-operator\">=</span> [<span class=\"cm-number\">1</span>,<span class=\"cm-number\">2</span>,<span class=\"cm-number\">3</span>]\n<span class=\"cm-variable\">dizi2</span> <span class=\"cm-operator\">=</span> [<span class=\"cm-number\">4</span>,<span class=\"cm-number\">5</span>,<span class=\"cm-number\">6</span>]\n<span class=\"cm-variable\">dizi1</span> <span class=\"cm-operator\">+</span> <span class=\"cm-variable\">dizi2</span>        <span class=\"cm-comment\"># =&gt; [1, 2, 3, 4, 5, 6]</span>\n<span class=\"cm-variable\">dizi1</span> <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-variable\">dizi2</span>       <span class=\"cm-comment\"># =&gt; [1, 2, 3, [4, 5, 6]]</span>\n\n<span class=\"cm-variable\">dizi1</span>                <span class=\"cm-comment\"># =&gt; [1, 2, 3, [4, 5, 6]]</span>\n<span class=\"cm-variable\">dizi1</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">flatten</span>        <span class=\"cm-comment\"># =&gt; [1, 2, 3, 4, 5, 6]</span></pre>\n<p>Array sınıfı <strong>each</strong>, <strong>select</strong>, <strong>map</strong>, vb… metotları kullanabilmemizi sağlayan <strong>Enumerable</strong> modülünü içerir.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">Array</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">ancestors</span>\n<span class=\"cm-operator\">=&gt;</span> [<span class=\"cm-tag\">Array</span>, <span class=\"cm-tag\">Enumerable</span>, <span class=\"cm-tag\">Object</span>, <span class=\"cm-atom\">PP:</span><span class=\"cm-atom\">:ObjectMixin</span>, <span class=\"cm-tag\">Kernel</span>, <span class=\"cm-tag\">BasicObject</span>]</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">50</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-51 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Diziler</h1>\n\n\n<h2>Array Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Emici operatör (splat) olarak bilinen <strong>*</strong> metodu dizi oluşturmak için oldukça kullanışlıdır:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">a</span>, <span class=\"cm-operator\">*</span><span class=\"cm-variable\">b</span> <span class=\"cm-operator\">=</span> [<span class=\"cm-number\">1</span>,<span class=\"cm-number\">2</span>,<span class=\"cm-number\">3</span>,<span class=\"cm-number\">4</span>,<span class=\"cm-number\">5</span>]    <span class=\"cm-comment\"># =&gt; [1, 2, 3, 4, 5]</span>\n<span class=\"cm-variable\">a</span>                      <span class=\"cm-comment\"># =&gt; 1</span>\n<span class=\"cm-variable\">b</span>                      <span class=\"cm-comment\"># =&gt; [2, 3, 4, 5]</span>\n<span class=\"cm-variable\">c</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span>, [<span class=\"cm-number\">2</span>,<span class=\"cm-number\">3</span>,<span class=\"cm-number\">4</span>]         <span class=\"cm-comment\"># =&gt; [1, [2, 3, 4]]</span>\n<span class=\"cm-variable\">c</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span>, <span class=\"cm-operator\">*</span>[<span class=\"cm-number\">2</span>,<span class=\"cm-number\">3</span>,<span class=\"cm-number\">4</span>]        <span class=\"cm-comment\"># =&gt; [1, 2, 3, 4]</span>\n<span class=\"cm-variable\">d</span> <span class=\"cm-operator\">=</span> [<span class=\"cm-operator\">*</span><span class=\"cm-number\">1</span><span class=\"cm-operator\">..</span><span class=\"cm-number\">10</span>]           <span class=\"cm-comment\"># =&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></pre>\n<p>İlginç bir kullanım:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">ilk</span>, <span class=\"cm-operator\">*</span>, <span class=\"cm-variable\">son</span> <span class=\"cm-operator\">=</span> [<span class=\"cm-number\">5</span>, <span class=\"cm-number\">10</span>, <span class=\"cm-number\">15</span>, <span class=\"cm-number\">20</span>, <span class=\"cm-number\">25</span>] \n<span class=\"cm-variable\">ilk</span>   <span class=\"cm-comment\"># =&gt; 5</span>\n<span class=\"cm-variable\">son</span>   <span class=\"cm-comment\"># =&gt; 25</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">51</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-52 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Sözlükler</h1>\n\n\n<h2>Hash Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Diğer dillerde ‘associative array’ yani birleştirilmiş diziler olarak da karşılaşabileceğimiz sözlüklerde elemanlar <strong>anahtar =&gt; değer</strong> formatında saklanır</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">ogrenci</span> <span class=\"cm-operator\">=</span> {<span class=\"cm-string\">'ad'</span> <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-string\">'Ali'</span>, <span class=\"cm-string\">'soyad'</span> <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-string\">'Kara'</span>}</pre>\n<p>Anahtar değerleri herhangi bir türden olabilir. Ancak <strong>eql?</strong> metoduna göre birbirine eşit olan sadece bir anahtar bulunabilir</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">a</span> <span class=\"cm-operator\">=</span> {<span class=\"cm-number\">1</span> <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-string\">\"bir\"</span>, <span class=\"cm-number\">1.0</span> <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-string\">\"birnoktasifir\"</span>}\n<span class=\"cm-variable\">a</span>[<span class=\"cm-number\">1</span>]              <span class=\"cm-comment\"># =&gt; \"bir\"</span>\n<span class=\"cm-variable\">a</span>[<span class=\"cm-number\">1.0</span>]            <span class=\"cm-comment\"># =&gt; \"birnoktasifir\"</span>\n\n<span class=\"cm-number\">1</span> <span class=\"cm-operator\">==</span> <span class=\"cm-number\">1.0</span>       <span class=\"cm-comment\"># =&gt; true</span>\n<span class=\"cm-number\">1</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">eql?</span> <span class=\"cm-number\">1.0</span>     <span class=\"cm-comment\"># =&gt; false</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">52</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-53 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Sözlükler</h1>\n\n\n<h2>Hash Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Sözlüklerde anahtar olarak genellikle semboller kullanılır. Bu durumda iki farklı yazım şekli kullanılabilir</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-comment\"># Ruby 1.9'dan önce</span>\n<span class=\"cm-variable\">ogrenci</span> <span class=\"cm-operator\">=</span> {<span class=\"cm-atom\">:ad</span> <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-string\">'Ali'</span>, <span class=\"cm-atom\">:soyad</span> <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-string\">'Kara'</span>}\n\n<span class=\"cm-comment\"># Ruby 1.9'dan sonra</span>\n<span class=\"cm-variable\">ogrenci</span> <span class=\"cm-operator\">=</span> {<span class=\"cm-atom\">ad:</span> <span class=\"cm-string\">'Ali'</span>, <span class=\"cm-atom\">soyad:</span> <span class=\"cm-string\">'Kara'</span>}</pre>\n<p>Anahtarlara erişmek için <strong>keys</strong>, değerlere erişmek için de <strong>values</strong> metotları kullanılabilir</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">ogrenci</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">keys</span>     <span class=\"cm-comment\"># =&gt; [:ad, :soyad]</span>\n<span class=\"cm-variable\">ogrenci</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">values</span>   <span class=\"cm-comment\"># =&gt; [\"Ali\", \"Kara\"]</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">53</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-54 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Sözlükler</h1>\n\n\n<h2>Hash Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Sözlükler genellikle isimli parametreler olarak da kullanılmaktadır:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">isim</span>(<span class=\"cm-variable\">ad</span>, <span class=\"cm-variable\">soyad</span>)\n  <span class=\"cm-string\">\"#{</span><span class=\"cm-variable\">ad</span><span class=\"cm-string\">} #{</span><span class=\"cm-variable\">soyad</span><span class=\"cm-string\">}\"</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-variable\">puts</span> <span class=\"cm-variable\">isim</span> <span class=\"cm-string\">\"Ali\"</span>, <span class=\"cm-string\">\"Kara\"</span>   <span class=\"cm-comment\"># Ali Kara</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">isim</span>(<span class=\"cm-variable\">params</span><span class=\"cm-operator\">=</span>{}) <span class=\"cm-comment\"># Ruby 2.0 ile birlikte \"def isim(**params)\"</span>\n  <span class=\"cm-string\">\"#{</span><span class=\"cm-variable\">params</span>[<span class=\"cm-atom\">:ad</span>]<span class=\"cm-string\">} #{</span><span class=\"cm-variable\">params</span>[<span class=\"cm-atom\">:soyad</span>]<span class=\"cm-string\">}\"</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-variable\">isim</span>    <span class=\"cm-atom\">ad:</span> <span class=\"cm-string\">\"Ali\"</span>,  <span class=\"cm-atom\">soyad:</span> <span class=\"cm-string\">\"Kara\"</span>     <span class=\"cm-comment\"># =&gt; \"Ali Kara\"</span>\n<span class=\"cm-variable\">isim</span> <span class=\"cm-atom\">soyad:</span> <span class=\"cm-string\">\"Kara\"</span>,    <span class=\"cm-atom\">ad:</span> <span class=\"cm-string\">\"Ali\"</span>      <span class=\"cm-comment\"># =&gt; \"Ali Kara\"</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">54</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-55 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Sözlükler</h1>\n\n\n<h2>Hash Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Sözlükler de tıpkı diziler gibi <strong>Enumerable</strong> modülünün sunduğu imkanlardan yararlanır:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\">{}<span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">ancestors</span>\n<span class=\"cm-comment\"># =&gt; [Hash, Enumerable, Object, PP::ObjectMixin, Kernel, BasicObject]</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">ogrenci</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">each</span> <span class=\"cm-keyword\">do</span> |<span class=\"cm-def\">anahtar</span>, <span class=\"cm-def\">deger</span>|\n  <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"#{</span><span class=\"cm-variable\">anahtar</span><span class=\"cm-string\">}: #{</span><span class=\"cm-variable\">deger</span><span class=\"cm-string\">}\"</span>\n<span class=\"cm-keyword\">end</span>  \n<span class=\"cm-comment\"># ad: Ali</span>\n<span class=\"cm-comment\"># soyad: Kara</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">55</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-56 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Uygulama - 1</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Dört işlem yapacak olan metotları tasarlayınız. </p>\n<p><em>Örnek Çıktılar</em></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">topla</span>(<span class=\"cm-number\">3</span>,<span class=\"cm-number\">5</span>)    <span class=\"cm-comment\"># =&gt; 8</span>\n<span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">cikar</span>(<span class=\"cm-number\">3</span>,<span class=\"cm-number\">5</span>)    <span class=\"cm-comment\"># =&gt; -2</span>\n<span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-operator\">...</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">56</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-57 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Uygulama - 2</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Kendisine gönderilen metin parametresinin palindrom olup/olmadığını sorgulayacak <strong>palindrom?</strong> adında bir metot tasarlayın.</p>\n<p><strong>Not:</strong> Palindrom baştan veya sondan okunuşu aynı olan kelimelerdir.</p>\n<p><em>Örnek Çıktı</em></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">palindrom?</span> <span class=\"cm-string\">\"kazak\"</span>    <span class=\"cm-comment\"># =&gt; true</span>\n<span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">palindrom?</span> <span class=\"cm-string\">\"kalpak\"</span>   <span class=\"cm-comment\"># =&gt; false</span></pre>\n<p><strong>Bonus:</strong> Metodunuzu, aynı sorgulamayı cümleler için gerçekleştirecek hale getiriniz</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">palindrom?</span> <span class=\"cm-string\">\"Traş niçin şart\"</span>             <span class=\"cm-comment\"># =&gt; true</span>\n<span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">palindrom?</span> <span class=\"cm-string\">\"Ey Edip Adana da pide ye.\"</span>   <span class=\"cm-comment\"># =&gt; true</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">57</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-58 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Uygulama - 3</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>İki parametresi olan kac_adet adında bir metot tanımlayın. Metodunuz kendisine gönderilen ilk parametre içerisinde ikinci parametrede yer alan metinden kaç tane bulunduğunu hesaplayıp, geri döndürmelidir</p>\n<p><strong>Not:</strong> Metodunuz Büyük/küçük harf durumunu da değerlendirmelidir</p>\n<p><em>Örnek Çıktı</em></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">kac_adet</span>(<span class=\"cm-string\">\"bu cümlede iki tane bu var\"</span>, <span class=\"cm-string\">\"bu\"</span>)   <span class=\"cm-comment\"># =&gt; 2</span>\n<span class=\"cm-variable\">kac_adet</span>(<span class=\"cm-string\">\"Bu cümlede iki tane bu var\"</span>, <span class=\"cm-string\">\"BU\"</span>)   <span class=\"cm-comment\"># =&gt; 0</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">58</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-59 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Uygulama - 4</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Bir dizi içerisindeki metinlerin uzunluklarını içeren başka bir diziyi geri döndürecek olan metoda ilişkin kodu yazınız.</p>\n<p><em>Örnek Çıktı</em></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">uzunluk_bulucu_metot</span> [<span class=\"cm-string\">\"Ali\"</span>, <span class=\"cm-string\">\"Veli\"</span>, <span class=\"cm-string\">\"Nuriye\"</span>]   <span class=\"cm-comment\"># =&gt; [3, 4, 6]</span></pre>\n<p><strong>Bonus:</strong> Aynı işlem sonucunda ilk dizideki metinlerin anahtar, uzunlukların değer olduğu bir sözlüğü geriye döndürecek olan metodu oluşturunuz</p>\n<p><em>Örnek Çıktı</em></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">uzunluk_bulucu_metot</span> [<span class=\"cm-string\">\"Ali\"</span>, <span class=\"cm-string\">\"Veli\"</span>, <span class=\"cm-string\">\"Nuriye\"</span>]\n<span class=\"cm-comment\"># =&gt; {\"Ali\" =&gt; 3, \"Veli\" =&gt; 4, \"Nuriye\" =&gt; 6}</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">59</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-60 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Uygulama - 5</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Kendisine gönderilen metnin içerisindeki kelimeleri; uzunluklarına göre küçükten büyüğe doğru yeniden sıralayan <strong>sirala</strong> adında bir metot tasarlayın</p>\n<p><em>Örnek Çıktı</em></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">sirala</span>(<span class=\"cm-string\">\"bilişim eskişehir akademik\"</span>)  <span class=\"cm-comment\"># =&gt; \"bilişim akademik eskişehir\"</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">60</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-61 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Kontrol Yapıları</h1>\n\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<ul>\n<li>Akış Kontrolü<ul>\n<li>if, else, elsif</li>\n<li>unless</li>\n<li>Üçlü operatör (? :)</li>\n<li>case - when</li>\n</ul>\n</li>\n</ul>\n\n</div>\n\n<div class=\"column column-2\">\n<ul>\n<li>Döngüler<ul>\n<li>Enumerable Modülü</li>\n<li>İstenmeyen çocuk for .. in</li>\n<li>while</li>\n<li>until</li>\n<li>loop</li>\n</ul>\n</li>\n<li>Hata Yönetimi</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">61</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-62 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>if, else ve elsif</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Belirli koşullara göre, programın çalışmasını farklı dallara ayırmak için neredeyse tüm dillerde if cümleleri kullanılır. Ruby’de bu kuralı bozmamıştır.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">if</span> <span class=\"cm-variable\">ko</span>ş<span class=\"cm-variable\">ul</span> \n  <span class=\"cm-variable\">yapilacaklar</span>\n<span class=\"cm-keyword\">end</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">if</span> <span class=\"cm-variable\">ko</span>ş<span class=\"cm-variable\">ul</span> <span class=\"cm-keyword\">then</span> <span class=\"cm-variable\">yapilacaklar</span> <span class=\"cm-keyword\">end</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">yapilacaklar</span> <span class=\"cm-keyword\">if</span> <span class=\"cm-variable\">ko</span>ş<span class=\"cm-variable\">ul</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">62</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-63 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>if, else ve elsif</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>if ile belirtilen koşulun true olmaması durumunda else ve elsif bölümleri kullanılacaktır</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">if</span> <span class=\"cm-variable\">ko</span>ş<span class=\"cm-variable\">ul</span> \n  <span class=\"cm-variable\">yapilacaklar</span>\n<span class=\"cm-keyword\">elsif</span> <span class=\"cm-variable\">ko</span>ş<span class=\"cm-variable\">ul</span>\n  <span class=\"cm-variable\">yapilacaklar</span>\n<span class=\"cm-keyword\">else</span>\n  <span class=\"cm-variable\">yapilacaklar</span>\n<span class=\"cm-keyword\">end</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">if</span> <span class=\"cm-variable\">ko</span>ş<span class=\"cm-variable\">ul</span> <span class=\"cm-keyword\">then</span> <span class=\"cm-variable\">yapilacaklar</span> <span class=\"cm-keyword\">else</span> <span class=\"cm-variable\">yap</span>ı<span class=\"cm-variable\">lacaklar</span> <span class=\"cm-keyword\">end</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">63</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-64 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>unless</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>if cümleleri koşulun <strong>true</strong> olması durumunda o dalda bulunan kodları çalıştırırken, unless koşulun <strong>false</strong> olduğu daldaki kodu çalıştırır</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">unless</span> <span class=\"cm-variable\">ko</span>ş<span class=\"cm-variable\">ul</span> \n  <span class=\"cm-variable\">yapilacaklar</span>\n<span class=\"cm-keyword\">end</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">if</span> !<span class=\"cm-variable\">ko</span>ş<span class=\"cm-variable\">ul</span>\n  <span class=\"cm-variable\">yap</span>ı<span class=\"cm-variable\">lacaklar</span> \n<span class=\"cm-keyword\">end</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">yapilacaklar</span> <span class=\"cm-keyword\">unless</span> <span class=\"cm-variable\">ko</span>ş<span class=\"cm-variable\">ul</span></pre>\n<p>unless ile birlikte <strong>else</strong> kullanılabilse de okunurluğu azalttığı için kullanımı tavsiye edilmemektedir.</p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">64</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-65 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Üçlü operatör (? :)</h1>\n\n\n<h2>Ternary Operator</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Kısa if-else cümlelerine alternatif bir tek satırlık yazım şekli sunar</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">ko</span>ş<span class=\"cm-variable\">ul</span> <span class=\"cm-string\">? </span><span class=\"cm-variable\">ko</span>ş<span class=\"cm-variable\">ul_true_ise_yap</span>ı<span class=\"cm-variable\">lacaklar</span> <span class=\"cm-operator\">:</span> <span class=\"cm-variable\">ko</span>ş<span class=\"cm-variable\">ul_false_ise_yap</span>ı<span class=\"cm-variable\">lacaklar</span></pre>\n<p>if, unless veya üçlü operatör geriye en son işlenen ifadenin sonucunu döndürür</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">gun</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">\"Pazartesi\"</span>\n<span class=\"cm-variable\">puts</span>(<span class=\"cm-keyword\">if</span> <span class=\"cm-variable\">gun</span><span class=\"cm-operator\">==</span><span class=\"cm-string\">\"Pazartesi\"</span> <span class=\"cm-keyword\">then</span> <span class=\"cm-string\">\"Sendrom vakti\"</span> <span class=\"cm-keyword\">else</span> <span class=\"cm-string\">\"Yuppiii\"</span> <span class=\"cm-keyword\">end</span>)\n\n<span class=\"cm-variable\">puts</span>(<span class=\"cm-variable\">gun</span><span class=\"cm-operator\">==</span><span class=\"cm-string\">\"Pazartesi\"</span> <span class=\"cm-string\">? </span><span class=\"cm-string\">\"Sendrom vakti\"</span> <span class=\"cm-operator\">:</span> <span class=\"cm-string\">\"Yuppiii\"</span>)</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">65</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-66 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>case - when</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Çok sayıda dallanma bulunduğu durumlarda tercih edilen bir kontrol yapısıdır</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">degisken</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">12.5</span>\n\n<span class=\"cm-variable\">puts</span> <span class=\"cm-keyword\">case</span> <span class=\"cm-variable\">degisken</span>\n     <span class=\"cm-keyword\">when</span> <span class=\"cm-tag\">String</span>  <span class=\"cm-keyword\">then</span> <span class=\"cm-string\">\"Bu bir metin\"</span>\n     <span class=\"cm-keyword\">when</span> <span class=\"cm-tag\">Integer</span> <span class=\"cm-keyword\">then</span> <span class=\"cm-string\">\"Bu bir tamsayı\"</span>\n     <span class=\"cm-keyword\">when</span> <span class=\"cm-tag\">Float</span>   <span class=\"cm-keyword\">then</span> <span class=\"cm-string\">\"Bu bir ondalıklı sayı\"</span>\n     <span class=\"cm-keyword\">else</span>              <span class=\"cm-string\">\"Bunun ne olduğu hakkında bir fikrim yok\"</span>\n     <span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-comment\"># Bu bir ondalıklı sayı</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">66</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-67 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Enumerable Modülü</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Enumerable modülü klasik döngülerin yerine kullanabileceğimiz pek çok metot barındırır</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">Enumerable</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">instance_methods</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">sort</span>\n\n<span class=\"cm-comment\"># =&gt; [:all?, :any?, :chunk, :collect, :collect_concat, :count, :cycle, :detect, :drop, :drop_while, :each_cons, :each_entry, :each_slice, :each_with_index, :each_with_object, :entries, :find, :find_all, :find_index, :first, :flat_map, :grep, :group_by, :include?, :inject, :lazy, :map, :max, :max_by, :member?, :min, :min_by, :minmax, :minmax_by, :none?, :one?, :partition, :reduce, :reject, :reverse_each, :select, :slice_before, :sort, :sort_by, :take, :take_while, :to_a, :to_h, :zip]</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">67</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-68 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>for … in</h1>\n\n\n<h2>İstenmeyen Çocuk</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Her ne kadar diğer pek çok dil için bir klasik sayılsa da pratikte <strong>for</strong> döngüsü kullanan Ruby programcısı bulmanız bir hayli zordur</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">meyveler</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">%w[elma armut kiraz]</span>\n<span class=\"cm-keyword\">for</span> <span class=\"cm-variable\">meyve</span> <span class=\"cm-keyword\">in</span> <span class=\"cm-variable\">meyveler</span>\n  <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Bugün #{</span><span class=\"cm-variable\">rand</span>(<span class=\"cm-number\">0</span><span class=\"cm-operator\">..</span><span class=\"cm-number\">2</span>)<span class=\"cm-string\">} tane #{</span><span class=\"cm-variable\">meyve</span><span class=\"cm-string\">} yedim.\"</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-comment\"># Bugün 2 tane elma yedim.</span>\n<span class=\"cm-comment\"># Bugün 0 tane armut yedim.</span>\n<span class=\"cm-comment\"># Bugün 1 tane kiraz yedim.</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">68</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-69 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>while - until</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Klasik while ve until döngüleri, diğer dillere çok benzer şekilde Ruby’de de yer almaktadır</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">sayi</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span>\n\n<span class=\"cm-keyword\">while</span> <span class=\"cm-variable\">sayi</span> <span class=\"cm-operator\">&lt;=</span> <span class=\"cm-number\">5</span>\n  <span class=\"cm-variable\">print</span> <span class=\"cm-variable\">sayi</span>\n  <span class=\"cm-variable\">sayi</span> <span class=\"cm-operator\">+=</span> <span class=\"cm-number\">1</span>\n<span class=\"cm-keyword\">end</span>\n<span class=\"cm-comment\"># 12345</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">sayi</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span>\n\n<span class=\"cm-keyword\">until</span> <span class=\"cm-variable\">sayi</span> <span class=\"cm-operator\">&gt;</span> <span class=\"cm-number\">5</span>\n  <span class=\"cm-variable\">print</span> <span class=\"cm-variable\">sayi</span>\n  <span class=\"cm-variable\">sayi</span> <span class=\"cm-operator\">+=</span> <span class=\"cm-number\">1</span>\n<span class=\"cm-keyword\">end</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">69</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-70 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>loop</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Bir diğer döngü oluşturma yöntemi de loop kullanılmasıdır. Aşağıda bir <strong>sonsuz döngü</strong> gösterilmektedir</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">loop</span> <span class=\"cm-keyword\">do</span>\n  <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Ruby\"</span>\n<span class=\"cm-keyword\">end</span></pre>\n<p>Tüm döngülerde geçerli olmak üzere; döngüden çıkmak için <strong>break</strong>, bir sonraki adıma atlamak için <strong>next</strong>, geçerli adımın tekrarlanması için <strong>redo</strong> ve döngünün en baştan tekrar çalıştırılması için <strong>retry</strong> kullanılabilir. </p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">70</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-71 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Hata Yönetimi</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Programlarımızda oluşan hataları rescue yardımıyla yakalayabiliriz:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">begin</span>\n  <span class=\"cm-variable\">sayi</span> = <span class=\"cm-number\">1</span><span class=\"cm-operator\">/</span><span class=\"cm-number\">0</span>\n<span class=\"cm-variable\">rescue</span>\n  <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Sıfıra bölme hatası\"</span>\n<span class=\"cm-variable\">end</span>\n<span class=\"cm-comment\">#Sıfıra bölme hatası</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">begin</span>\n  <span class=\"cm-variable\">sayi</span> = <span class=\"cm-number\">1</span><span class=\"cm-operator\">/</span><span class=\"cm-number\">0</span>\n<span class=\"cm-variable\">rescue</span> <span class=\"cm-variable\">ZeroDivisionError</span>\n  <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Sıfıra bölme hatası\"</span>\n<span class=\"cm-variable\">end</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">71</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-72 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Hata Yönetimi</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Hatanın oluşmasını kendimiz sağlamak istersek <strong>raise</strong> veya <strong>fail</strong> metotlarından birini kullanabiliriz</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">sayi</span> = <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span> \n\n<span class=\"cm-variable\">begin</span>\n  <span class=\"cm-variable\">fail</span> <span class=\"cm-string\">\"Bir hata oluştu!\"</span> <span class=\"cm-keyword\">if</span> <span class=\"cm-variable\">sayi</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-number\">0</span>\n<span class=\"cm-variable\">end</span>\n<span class=\"cm-comment\"># RuntimeError: Bir hata oluştu!</span>\n<span class=\"cm-comment\"># ...</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">72</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-73 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Hata Yönetimi</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">topla</span>(<span class=\"cm-variable\">s1</span>, <span class=\"cm-variable\">s2</span>)\n  <span class=\"cm-keyword\">raise</span> <span class=\"cm-tag\">ArgumentError</span>, <span class=\"cm-string\">\"Parametreler sayı olmalıdır\"</span> \\\n    <span class=\"cm-keyword\">unless</span> [<span class=\"cm-variable\">s1</span>,<span class=\"cm-variable\">s2</span>]<span class=\"cm-operator\">.</span><span class=\"cm-variable\">all?</span> {|<span class=\"cm-def\">s</span>| <span class=\"cm-variable\">s</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">is_a?</span> <span class=\"cm-tag\">Numeric</span>}\n  <span class=\"cm-variable\">s1</span> <span class=\"cm-operator\">+</span> <span class=\"cm-variable\">s2</span>\n<span class=\"cm-keyword\">end</span>\n<span class=\"cm-variable\">topla</span>(<span class=\"cm-number\">3</span>,<span class=\"cm-number\">5</span>)        <span class=\"cm-comment\"># =&gt; 8</span>\n<span class=\"cm-variable\">topla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-string\">\"elma\"</span>)\n<span class=\"cm-comment\"># ArgumentError: Parametreler sayı olmalıdır</span>\n<span class=\"cm-comment\"># ...</span></pre>\n<p>Standart hata sınıfları yerine kendi hata sınıfımız oluşturmak için, standart sınıflardan birinden türetilmiş bir sınıf oluşturabiliriz</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">BuBenimHatam</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-tag\">StandardError</span>\n<span class=\"cm-keyword\">end</span>\n<span class=\"cm-comment\"># Artık \"raise BuBenimHatam\" şeklinde bir kullanım geçerli olacaktır</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">73</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-74 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Hata Yönetimi</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Farklı hataları yakalamak için birden fazla rescue kullanabiliriz. Bir hata oluşması durumunda kesinlikle çalışmasını istediğimiz kodları <strong>ensure</strong> kelimesinden sonra yazabiliriz.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">begin</span>\n  <span class=\"cm-keyword\">raise</span> <span class=\"cm-tag\">KeyError</span>\n<span class=\"cm-keyword\">rescue</span> <span class=\"cm-tag\">NoMethodError</span>\n  <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Böyle bir metot yok\"</span>\n<span class=\"cm-keyword\">rescue</span> <span class=\"cm-tag\">ZeroDivisionError</span>\n  <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Sıfıra bölme hatası\"</span>\n<span class=\"cm-keyword\">rescue</span> <span class=\"cm-tag\">KeyError</span>\n  <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Böyle bir anahtar mevcut değil\"</span>\n<span class=\"cm-keyword\">ensure</span> \n  <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Bir hata oluştu\"</span>\n<span class=\"cm-keyword\">end</span>\n<span class=\"cm-comment\"># Böyle bir anahtar mevcut değil</span>\n<span class=\"cm-comment\"># Bir hata oluştu</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">74</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-75 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Bloklar</h1>\n\n\n<h2>do…end</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Daha önce blokları isimsiz metotlara benzetebileceğimizden bahsetmiştik</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">topla</span>(<span class=\"cm-variable\">a</span>, <span class=\"cm-variable\">b</span>) <span class=\"cm-variable\">a</span><span class=\"cm-operator\">+</span><span class=\"cm-variable\">b</span> <span class=\"cm-keyword\">end</span>\n<span class=\"cm-variable\">topla</span>(<span class=\"cm-number\">3</span>,<span class=\"cm-number\">5</span>)   <span class=\"cm-comment\"># =&gt; 8</span></pre>\n<p>Bir bloğu bir değişkene atayabilir miyiz?</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">topla</span> <span class=\"cm-operator\">=</span> {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">+</span><span class=\"cm-variable\">b</span> }\n<span class=\"cm-comment\"># SyntaxError...</span></pre>\n<p>Ruby’de herşeyin bir nesne olduğunu söylemiştik. İşte bu durumun bir istisnası. Ancak blokları da nesne olarak kullanmamız mümkündür. Bunun için birazdan proc ve lambda kavramlarından bahsedeceğiz. </p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">75</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-76 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Blok, proc ve lambda</h1>\n\n\n<h2>Lambda</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Bir blok oluşturmak için kullanabileceğimiz en kolay yöntem lambda kullanımıdır</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">topla</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">lambda</span> {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">+</span><span class=\"cm-variable\">b</span> }\n<span class=\"cm-comment\"># =&gt; #&lt;Proc:0x007f5f18... (lambda)&gt;</span>\n\n<span class=\"cm-variable\">topla</span> <span class=\"cm-operator\">=</span> <span class=\"cm-arrow\">-&gt;</span> <span class=\"cm-variable\">a</span>, <span class=\"cm-variable\">b</span> {<span class=\"cm-variable\">a</span> <span class=\"cm-operator\">+</span> <span class=\"cm-variable\">b</span>}</pre>\n<p>Peki lambda bir nesne midir?</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">topla</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span>                 <span class=\"cm-comment\"># =&gt; Proc</span>\n<span class=\"cm-def\">topla</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">class</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">superclass</span>      <span class=\"cm-comment\"># =&gt; Object</span>\n<span class=\"cm-variable\">topla</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">object_id</span>             <span class=\"cm-comment\"># =&gt; 70023204708420</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">76</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-77 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Blok, proc ve lambda</h1>\n\n\n<h2>Lambda</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Bir blok nesnesini çalıştırmak istediğimizde <strong>call</strong> metodunu kullanabiliriz.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">topla</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">lambda</span> {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">+</span><span class=\"cm-variable\">b</span> }\n<span class=\"cm-variable\">topla</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">call</span>(<span class=\"cm-number\">2</span>,<span class=\"cm-number\">3</span>)  <span class=\"cm-comment\"># =&gt; 5</span></pre>\n<p>Oldukça metotlara benziyor değil mi? Peki bir metodu bloğa dönüştürebilir miyiz?</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">topla</span>(<span class=\"cm-variable\">a</span>,<span class=\"cm-variable\">b</span>) <span class=\"cm-variable\">a</span><span class=\"cm-operator\">+</span><span class=\"cm-variable\">b</span> <span class=\"cm-keyword\">end</span>\n<span class=\"cm-comment\"># =&gt; :topla</span>\n\n<span class=\"cm-variable\">topla</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">to_proc</span>\n<span class=\"cm-comment\"># =&gt; #&lt;Proc:0x007f9a49f55... (lambda)&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">77</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-78 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Blok, proc ve lambda</h1>\n\n\n<h2>Bloğun Parametre Olarak Gönderilmesi</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Aşağıdaki örneği inceleyelim</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">hesapla</span>(<span class=\"cm-variable\">s1</span>, <span class=\"cm-variable\">s2</span>, <span class=\"cm-variable\">islem</span>)\n  <span class=\"cm-variable\">islem</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">call</span>(<span class=\"cm-variable\">s1</span>, <span class=\"cm-variable\">s2</span>)\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-variable\">toplam</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>, <span class=\"cm-keyword\">lambda</span> {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">+</span><span class=\"cm-variable\">b</span>})  <span class=\"cm-comment\"># =&gt; 8</span>\n<span class=\"cm-variable\">fark</span>   <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>, <span class=\"cm-keyword\">lambda</span> {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">-</span><span class=\"cm-variable\">b</span>})  <span class=\"cm-comment\"># =&gt; -2</span>\n<span class=\"cm-variable\">carpma</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>, <span class=\"cm-keyword\">lambda</span> {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">*</span><span class=\"cm-variable\">b</span>})  <span class=\"cm-comment\"># =&gt; 15</span>\n<span class=\"cm-variable\">bolme</span>  <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>, <span class=\"cm-keyword\">lambda</span> {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-string-2\">/b})  # =&gt; 0</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">78</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-79 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Blok, proc ve lambda</h1>\n\n\n<h2>Bloğun Parametre Olarak Gönderilmesi</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Eğer bu blokları alıştığımız şekilde parametre listesi dışında ve lambda kelimesini kullanmadan göndermek istersek; bu durumdan metodu haberdar etmemiz gerekecektir.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">hesapla</span>(<span class=\"cm-variable\">s1</span>, <span class=\"cm-variable\">s2</span>, &amp;<span class=\"cm-variable\">islem</span>)\n  <span class=\"cm-variable\">islem</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">call</span>(<span class=\"cm-variable\">s1</span>, <span class=\"cm-variable\">s2</span>)\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-variable\">toplam</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>) {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">+</span><span class=\"cm-variable\">b</span>}  <span class=\"cm-comment\"># =&gt; 8</span>\n<span class=\"cm-variable\">fark</span>   <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>) {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">-</span><span class=\"cm-variable\">b</span>}  <span class=\"cm-comment\"># =&gt; -2</span>\n<span class=\"cm-variable\">carpma</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>) {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">*</span><span class=\"cm-variable\">b</span>}  <span class=\"cm-comment\"># =&gt; 15</span>\n<span class=\"cm-variable\">bolme</span>  <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>) {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-string-2\">/b}  # =&gt; 0</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">79</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-80 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Blok, proc ve lambda</h1>\n\n\n<h2>Bloğun Parametre Olarak Gönderilmesi</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Aynı metodu bazı durumlarda blok olmadan da kullanmak istersek, yani metodun bir blok ile birlikte çağırılıp, çağırılmadığını anlamak istersek <strong>block_given?</strong> metodunu kullanabiliriz. Örneğin az önceki metodun varsayılan işlem olarak toplama işlemi yapmasını sağlayalım</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">hesapla</span>(<span class=\"cm-variable\">s1</span>, <span class=\"cm-variable\">s2</span>, &amp;<span class=\"cm-variable\">islem</span>)\n  <span class=\"cm-variable\">block_given?</span> <span class=\"cm-string\">? </span><span class=\"cm-variable\">islem</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">call</span>(<span class=\"cm-variable\">s1</span>, <span class=\"cm-variable\">s2</span>) <span class=\"cm-operator\">:</span> <span class=\"cm-variable\">s1</span><span class=\"cm-operator\">+</span><span class=\"cm-variable\">s2</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-variable\">toplam</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>)               <span class=\"cm-comment\"># =&gt; 8</span>\n<span class=\"cm-variable\">fark</span>   <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>) {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">-</span><span class=\"cm-variable\">b</span>}  <span class=\"cm-comment\"># =&gt; -2</span>\n<span class=\"cm-variable\">carpma</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>) {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">*</span><span class=\"cm-variable\">b</span>}  <span class=\"cm-comment\"># =&gt; 15</span>\n<span class=\"cm-variable\">bolme</span>  <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>) {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-string-2\">/b}  # =&gt; 0</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">80</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-81 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Blok, proc ve lambda</h1>\n\n\n<h2>yield</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Aslında bu durum için daha kullanışlı bir yol da mevcuttur. Önceki örneklerdeki metodun parametre listesinde bloğumuza bir isim verip, çağırabilmek için <strong>&amp;islem</strong> parametresini kullanmıştık. Bu parametre olmadan da bloğa erişebilmek için <strong>yield</strong> anahtar kelimesini kullanabiliriz</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">hesapla</span>(<span class=\"cm-variable\">s1</span>, <span class=\"cm-variable\">s2</span>)\n  <span class=\"cm-variable\">block_given?</span> <span class=\"cm-string\">? </span><span class=\"cm-keyword\">yield</span>(<span class=\"cm-variable\">s1</span>,<span class=\"cm-variable\">s2</span>) <span class=\"cm-operator\">:</span> <span class=\"cm-variable\">s1</span><span class=\"cm-operator\">+</span><span class=\"cm-variable\">s2</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-variable\">toplam</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>)               <span class=\"cm-comment\"># =&gt; 8</span>\n<span class=\"cm-variable\">fark</span>   <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>) {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">-</span><span class=\"cm-variable\">b</span>}  <span class=\"cm-comment\"># =&gt; -2</span>\n<span class=\"cm-variable\">carpma</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>) {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-operator\">*</span><span class=\"cm-variable\">b</span>}  <span class=\"cm-comment\"># =&gt; 15</span>\n<span class=\"cm-variable\">bolme</span>  <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">hesapla</span>(<span class=\"cm-number\">3</span>, <span class=\"cm-number\">5</span>) {|<span class=\"cm-def\">a</span>, <span class=\"cm-def\">b</span>| <span class=\"cm-variable\">a</span><span class=\"cm-string-2\">/b}  # =&gt; 0</span></pre>\n<p><strong>yield</strong> kullanımı bize bir miktar <u>performans artışı</u>nı da hediye edecektir.</p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">81</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-82 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Blok, proc ve lambda</h1>\n\n\n<h2>Proc</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Proc ve lambda küçük bir farklılık dışında aynı şeydir. Aslında daha önce bahsettiğimiz gibi lambda, proc’un özel bir biçimdir.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">lambda</span> {}\n<span class=\"cm-comment\"># =&gt; #&lt;Proc:0x007fc5e3aa1a58@(main):1 (lambda)&gt;</span>\n\n<span class=\"cm-keyword\">proc</span> {}\n<span class=\"cm-comment\"># =&gt; #&lt;Proc:0x007fc5e3aab4e0@(main):2&gt;</span></pre>\n<p>Bir Proc nesnesi oluşturmak için new metodunu da kullanabiliriz</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">Proc</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span> {}\n<span class=\"cm-comment\"># =&gt; #&lt;Proc:0x007fc5e3aa8830@(main):3&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">82</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-83 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Blok, proc ve lambda</h1>\n\n\n<h2>Proc vs Lambda</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Proc ve lambda arasındaki fark; bir metot içerisinde <strong>return</strong> kullanıldığında ortaya çıkmaktadır. Lambda bir metodun parçası gibi çalışırken, proc kendi başına bir metot şeklinde çalışır.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">deneme_metodu</span>\n  <span class=\"cm-keyword\">lambda</span> { <span class=\"cm-keyword\">return</span> <span class=\"cm-string\">\"Lambda'dan geri dönülüyor\"</span> }<span class=\"cm-operator\">.</span><span class=\"cm-variable\">call</span>\n  <span class=\"cm-keyword\">return</span> <span class=\"cm-string\">\"Metot'tan geri dönülüyor\"</span>\n<span class=\"cm-keyword\">end</span>\n<span class=\"cm-variable\">puts</span> <span class=\"cm-variable\">deneme_metodu</span>  <span class=\"cm-comment\"># Metot'tan geri dönülüyor</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">deneme_metodu</span>\n  <span class=\"cm-keyword\">proc</span> { <span class=\"cm-keyword\">return</span> <span class=\"cm-string\">\"Proc'tan geri dönülüyor\"</span> }<span class=\"cm-operator\">.</span><span class=\"cm-variable\">call</span>\n  <span class=\"cm-keyword\">return</span> <span class=\"cm-string\">\"Metot'tan geri dönülüyor\"</span>\n<span class=\"cm-keyword\">end</span>\n<span class=\"cm-variable\">puts</span> <span class=\"cm-variable\">deneme_metodu</span>  <span class=\"cm-comment\"># Proc'tan geri dönülüyor</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">83</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-84 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Sınıflar</h1>\n\n\n<h2>class…end</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Bir sınıf <strong>class</strong> anahtar kelimesi kullanılarak tanımlanır:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Device</span>\n<span class=\"cm-keyword\">end</span></pre>\n<p>Tanımladığımız sınıftan bir nesne üreteceğimiz zaman ise <strong>new</strong> metodunu kullanırız:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">phone</span>    <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>  <span class=\"cm-comment\"># =&gt; #&lt;Device:0x007ffa158afef0&gt;</span>\n<span class=\"cm-variable\">tablet</span>   <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>  <span class=\"cm-comment\"># =&gt; #&lt;Device:0x007ffa158afb08&gt;</span>\n<span class=\"cm-variable\">notebook</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>  <span class=\"cm-comment\"># =&gt; #&lt;Device:0x007ffa158af770&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">84</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-85 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Initialize metodu</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Bir nesne ilk defa oluşturulurken yapılmasını istediklerimizi; özel bir metot olan <strong>initialize</strong> metodu sayesinde gerçekleştirebiliriz:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Device</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">initialize</span>\n    <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Nesne oluşturuluyor.\"</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-variable\">phone</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>   <span class=\"cm-comment\"># =&gt; #&lt;Device:0x007f948cead030&gt;</span>\n<span class=\"cm-comment\"># &gt;&gt; Nesne oluşturuluyor.</span>\n<span class=\"cm-variable\">tablet</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>  <span class=\"cm-comment\"># =&gt; #&lt;Device:0x007f948ceacc20&gt;</span>\n<span class=\"cm-comment\"># &gt;&gt; Nesne oluşturuluyor.</span></pre>\n<ul>\n<li>Ruby’de diğer bazı dillerdeki gibi <strong>destructor</strong> metodu bulunmaz.</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">85</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-86 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Örnek Değişkenleri</h1>\n\n\n<h2>@variable</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Sınıf içerisinde tanımlı bazı değişkenlerin, her örnek (instance) için farklı değerleri alabilmesini istediğimizde örnek değişkenlerini kullanırız:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Device</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">initialize</span>(<span class=\"cm-variable\">brand</span>)\n    <span class=\"cm-variable-2\">@brand</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">brand</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">phone</span>    <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>(<span class=\"cm-string\">'Samsung'</span>)  <span class=\"cm-comment\"># =&gt; #&lt;Device:0x007ffad2e879f0 @brand=\"Samsung\"&gt; </span>\n<span class=\"cm-variable\">tablet</span>   <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>(<span class=\"cm-string\">'Apple'</span>)    <span class=\"cm-comment\"># =&gt; #&lt;Device:0x007ffad2e87590 @brand=\"Apple\"&gt; </span>\n<span class=\"cm-variable\">notebook</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>(<span class=\"cm-string\">'Sony'</span>)     <span class=\"cm-comment\"># =&gt; #&lt;Device:0x007ffad2e871a8 @brand=\"Sony\"&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">86</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-87 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Örnek Metotları</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Sınıftan ürettiğimiz nesneler ile birlikte kullanacağımız metotlardır:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Device</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">initialize</span>(<span class=\"cm-variable\">brand</span>)\n    <span class=\"cm-variable-2\">@brand</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">brand</span>\n  <span class=\"cm-keyword\">end</span>\n\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">screen</span>(<span class=\"cm-variable\">message</span>)\n    <span class=\"cm-variable\">puts</span> <span class=\"cm-variable\">message</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">phone</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">screen</span>(<span class=\"cm-string\">\"2 cevapsız arama\"</span>)\n<span class=\"cm-comment\"># &gt;&gt; 2 cevapsız arama</span>\n<span class=\"cm-variable\">tablet</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">screen</span>(<span class=\"cm-string\">\"Lütfen şarj aletini takınız\"</span>)\n<span class=\"cm-comment\"># &gt;&gt; Lütfen şarj aletini takınız</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">87</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-88 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Örnek Metotları</h1>\n\n\n<h2>Get ve Set Metotları</h2>\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<p>Sınıftan ürettiğimiz nesneler ile birlikte kullanacağımız metotlardır:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Device</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">initialize</span>(<span class=\"cm-variable\">brand</span>)\n    <span class=\"cm-variable-2\">@brand</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">brand</span>\n    <span class=\"cm-variable-2\">@price</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>\n  <span class=\"cm-keyword\">end</span>\n\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">set_price</span>(<span class=\"cm-variable\">price</span>)\n    <span class=\"cm-variable-2\">@price</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">price</span>\n  <span class=\"cm-keyword\">end</span>\n\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">get_price</span>\n    <span class=\"cm-variable-2\">@price</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span></pre>\n\n</div>\n\n<div class=\"column column-2\">\n<p>&nbsp;<br /><br /></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">phone</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>(<span class=\"cm-string\">'Samsung'</span>)\n<span class=\"cm-variable\">phone</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">set_price</span>(<span class=\"cm-number\">250</span>)\n<span class=\"cm-variable\">phone</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">get_price</span>  <span class=\"cm-comment\"># =&gt; 250</span>\n\n<span class=\"cm-variable\">tablet</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>(<span class=\"cm-string\">'Apple'</span>)\n<span class=\"cm-variable\">tablet</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">set_price</span>(<span class=\"cm-number\">400</span>)\n<span class=\"cm-variable\">tablet</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">get_price</span>  <span class=\"cm-comment\"># =&gt; 400</span></pre>\n<p>Yandaki metotlar pek Ruby’nin tarzına benzemiyor, değil mi?</p>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">88</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-89 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Örnek Metotları</h1>\n\n\n<h2>Get ve Set Metotları</h2>\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<p>Ruby, get ve set metotlarını kolaylıkla tanımlayabilmemiz için üç adet makroyu kullanımımıza sunar:</p>\n<ul>\n<li>attr_reader</li>\n<li>attr_writer</li>\n<li>attr_accessor</li>\n</ul>\n\n</div>\n\n<div class=\"column column-2\">\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Device</span>\n  <span class=\"cm-variable\">attr_accessor</span> <span class=\"cm-atom\">:price</span>\n\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">initialize</span>(<span class=\"cm-variable\">brand</span>)\n    <span class=\"cm-variable-2\">@brand</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">brand</span>\n    <span class=\"cm-variable-2\">@price</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-variable\">phone</span>    <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>(<span class=\"cm-string\">'Samsung'</span>)\n<span class=\"cm-variable\">phone</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">price</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">250</span>\n<span class=\"cm-variable\">phone</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">price</span>  <span class=\"cm-comment\"># =&gt; 250</span>\n\n<span class=\"cm-variable\">tablet</span>    <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>(<span class=\"cm-string\">'Apple'</span>)\n<span class=\"cm-variable\">tablet</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">price</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">400</span>\n<span class=\"cm-variable\">tablet</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">price</span>  <span class=\"cm-comment\"># =&gt; 400</span></pre>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">89</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-90 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Sınıf  Metotları</h1>\n\n\n<h2>def self.class_method</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Sınıf Metotları, örnek metotlarına oldukça benzerdir:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Device</span>\n  <span class=\"cm-operator\">...</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-keyword\">self</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">info</span>\n    <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"You can use this class to create new device objects.\"</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">info</span>\n<span class=\"cm-comment\"># &gt;&gt; You can use this class to create new device objects.</span>\n\n<span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>(<span class=\"cm-string\">'Samsung'</span>)<span class=\"cm-operator\">.</span><span class=\"cm-variable\">info</span>\n<span class=\"cm-comment\"># ~&gt; undefined method `info' for #&lt;Device:...&gt; (NoMethodError)</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">90</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-91 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Sınıf  Metotları</h1>\n\n\n<h2>def self.class_method</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Sınıf metotları şu şekillerde de oluşturulabilir:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Device</span>\n  <span class=\"cm-operator\">...</span>\n  <span class=\"cm-keyword\">class</span> <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-keyword\">self</span>\n    <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">info</span>\n        <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"You can use this class to create new device objects.\"</span>\n    <span class=\"cm-keyword\">end</span>\n  <span class=\"cm-keyword\">end</span>  \n<span class=\"cm-keyword\">end</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">info</span>\n  <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"You can use this class to create new device objects.\"</span>\n<span class=\"cm-keyword\">end</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">91</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-92 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Sınıf Değişkenleri</h1>\n\n\n<h2>@@variable</h2>\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Device</span>\n  <span class=\"cm-variable-2\">@@count</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>\n\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">initialize</span>\n    <span class=\"cm-variable-2\">@@count</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable-2\">@@count</span><span class=\"cm-operator\">.</span><span class=\"cm-keyword\">next</span>\n  <span class=\"cm-keyword\">end</span>\n\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-keyword\">self</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">count</span>\n    <span class=\"cm-variable-2\">@@count</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span></pre>\n\n</div>\n\n<div class=\"column column-2\">\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">phone</span>  <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>\n<span class=\"cm-variable\">tablet</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>\n<span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Device count: #{</span><span class=\"cm-tag\">Device</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">count</span><span class=\"cm-string\">}\"</span>\n<span class=\"cm-comment\"># &gt;&gt; Device count: 2</span></pre>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">92</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-93 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Kalıtım</h1>\n\n\n<h2>Miras - Inheritance</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Bir sınıftan başka bir sınıf türetmek için <strong>&lt;</strong> operatörü kullanılır</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">A</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">B</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-tag\">A</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-tag\">B</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">ancestors</span>    <span class=\"cm-comment\"># =&gt; [B, A, Object, Kernel, BasicObject]</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">B</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">methods</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">size</span>                   <span class=\"cm-comment\"># =&gt; 99</span>\n<span class=\"cm-tag\">B</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">instance_methods</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">size</span>          <span class=\"cm-comment\"># =&gt; 55</span>\n<span class=\"cm-tag\">Object</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">instance_methods</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">size</span>     <span class=\"cm-comment\"># =&gt; 55</span>\n<span class=\"cm-tag\">B</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">instance_methods</span>(<span class=\"cm-keyword\">false</span>)<span class=\"cm-operator\">.</span><span class=\"cm-variable\">size</span>   <span class=\"cm-comment\"># =&gt; 0</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">93</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-94 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Kalıtım</h1>\n\n\n<h2>Miras - Inheritance</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Klasik bir örnekle durumu görelim</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Dikdortgen</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">initialize</span>(<span class=\"cm-variable\">uzunluk</span>, <span class=\"cm-variable\">yukseklik</span>)\n    <span class=\"cm-variable-2\">@uzunluk</span>, <span class=\"cm-variable-2\">@yukseklik</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">uzunluk</span>, <span class=\"cm-variable\">yukseklik</span>\n  <span class=\"cm-keyword\">end</span>\n\n <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">cevre</span>() <span class=\"cm-number\">2</span> <span class=\"cm-operator\">*</span> (<span class=\"cm-variable-2\">@uzunluk</span> <span class=\"cm-operator\">+</span> <span class=\"cm-variable-2\">@yukseklik</span>) <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Kare</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-tag\">Dikdortgen</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">initialize</span>(<span class=\"cm-variable\">uzunluk</span>)\n    <span class=\"cm-variable-2\">@uzunluk</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable-2\">@yukseklik</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">uzunluk</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">94</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-95 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Çoklu Kalıtım</h1>\n\n\n<h2>Miras - Inheritance</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Ruby, çoklu kalıtımı  kendisinin <strong>basitlik</strong> ilkesine karşı geldiği için desteklemez.</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">A</span>; <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">B</span>; <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">C</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-tag\">A</span>, <span class=\"cm-tag\">B</span>; <span class=\"cm-keyword\">end</span> <span class=\"cm-comment\"># Hata</span></pre>\n<ul>\n<li>Ancak, bu duruma alternatif olarak, birazdan öğreneceğimiz modülleri sunar.</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">95</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-96 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Farklı İşlemler için Aynı Arayüzün Kullanılması</h1>\n\n\n<h2>Method Overloading</h2>\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Device</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Phone</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-tag\">Device</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">install_application</span>\n    <span class=\"cm-comment\"># phone app installation code</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Tablet</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-tag\">Device</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">install_application</span>\n    <span class=\"cm-comment\"># tablet app installation code</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span></pre>\n\n</div>\n\n<div class=\"column column-2\">\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">phone</span>  <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Phone</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>\n<span class=\"cm-variable\">tablet</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Tablet</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>\n\n<span class=\"cm-variable\">phone</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">install_application</span>\n<span class=\"cm-variable\">tablet</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">install_application</span></pre>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">96</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-97 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Super metodu</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Ebeveyn sınıftaki aynı isimli,  metoda erişmek için <strong>super</strong> anahtar kelimesi kullanılır: <a href=\"https://gist.github.com/045e96a03a4117f54080\" target=\"_blank\">Örnek</a></li>\n</ul>\n<p>Diğer metotların aksine super metodunun parantez ile veya parantezsiz kullanılması farklı sonuçlar doğurabilir</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">def</span> <span class=\"cm-def\">any_method</span>(<span class=\"cm-variable\">param1</span>, <span class=\"cm-variable\">param2</span>, <span class=\"cm-variable\">param3</span>)\n  <span class=\"cm-keyword\">super</span>           <span class=\"cm-comment\"># super(param1, param2, param3)</span>\n  <span class=\"cm-keyword\">super</span>()         <span class=\"cm-comment\"># super()</span>\n  <span class=\"cm-keyword\">super</span>(<span class=\"cm-variable\">param1</span>)   <span class=\"cm-comment\"># super(param1)</span>\n<span class=\"cm-keyword\">end</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">97</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-98 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Kalıtım ve Sınıf Değişkenleri</h1>\n\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<p>Sınıf değişkenleri de kalıtım yoluyla aktarılırlar. Bu durum, dikkat edilmezse istenmeyen sonuçlar doğurabilir: </p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">A</span>\n  <span class=\"cm-variable-2\">@@var</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">B</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-tag\">A</span>\n  <span class=\"cm-variable-2\">@@var</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">2</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">C</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-tag\">A</span>\n  <span class=\"cm-variable-2\">@@var</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">3</span>\n<span class=\"cm-keyword\">end</span></pre>\n\n</div>\n\n<div class=\"column column-2\">\n<p><br /><br /><br /></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">A</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">class_variable_get</span>(<span class=\"cm-atom\">:@</span><span class=\"cm-variable-2\">@var</span>) <span class=\"cm-comment\"># =&gt; 3</span>\n<span class=\"cm-tag\">B</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">class_variable_get</span>(<span class=\"cm-atom\">:@</span><span class=\"cm-variable-2\">@var</span>) <span class=\"cm-comment\"># =&gt; 3</span>\n<span class=\"cm-tag\">C</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">class_variable_get</span>(<span class=\"cm-atom\">:@</span><span class=\"cm-variable-2\">@var</span>) <span class=\"cm-comment\"># =&gt; 3</span></pre>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">98</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-99 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Kalıtım ve Sınıf Değişkenleri</h1>\n\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<p>Bu sorunun çözümü için <strong>Sınıf Örnek Değişkeni</strong> olarak adlandırabileceğimiz bir değişken kullanabiliriz: </p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">A</span>\n  <span class=\"cm-variable-2\">@var</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">B</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-tag\">A</span>\n  <span class=\"cm-variable-2\">@var</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">2</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">C</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-tag\">A</span>\n  <span class=\"cm-variable-2\">@var</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">3</span>\n<span class=\"cm-keyword\">end</span></pre>\n\n</div>\n\n<div class=\"column column-2\">\n<p><br /><br /><br /></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">A</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">instance_variable_get</span>(<span class=\"cm-atom\">:@var</span>) <span class=\"cm-comment\">#=&gt; 1</span>\n<span class=\"cm-tag\">B</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">instance_variable_get</span>(<span class=\"cm-atom\">:@var</span>) <span class=\"cm-comment\">#=&gt; 2</span>\n<span class=\"cm-tag\">C</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">instance_variable_get</span>(<span class=\"cm-atom\">:@var</span>) <span class=\"cm-comment\">#=&gt; 3</span></pre>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">99</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-100 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Metotların Görünürlüğü</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Nesne yönelimli programlamanın temel ilkeleri gereği; sınıfımızdaki metotların kullanılabileceği alanları sınırlandırmamız gerekmektedir. Pek çok diğer dildeki gibi Ruby’de bu amaçla üç anahtar kelime sağlar:</p>\n<ul>\n<li>public</li>\n<li>private</li>\n<li>protected</li>\n</ul>\n<p>Tüm metotların varsayılan erişim şekli <strong>public</strong> olarak tanımlıdır. Yani her yerden erişilebilir durumdadır.</p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">100</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-101 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Özel Metotlar</h1>\n\n\n<h2>private</h2>\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<p>Bir metodun <strong>private</strong> olarak tanımlanması; bu metodun sadece sınıftaki diğer metotlar tarafından çağırılabileceği anlamına gelmektedir. </p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Metotlar</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">acik_metot</span>\n    <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Bu metot kullanıma açıktır\"</span>\n    <span class=\"cm-variable\">ozel_metot</span>\n  <span class=\"cm-keyword\">end</span>\n\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">ozel_metot</span>\n    <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Bu metot sınıf dışında kullanıma kapalıdır\"</span>\n  <span class=\"cm-keyword\">end</span>\n\n  <span class=\"cm-keyword\">private</span> <span class=\"cm-atom\">:ozel_metot</span>\n<span class=\"cm-keyword\">end</span></pre>\n\n</div>\n\n<div class=\"column column-2\">\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">Metotlar</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">acik_metot</span>\n<span class=\"cm-comment\"># &gt;&gt; Bu metot kullanıma açıktır</span>\n<span class=\"cm-comment\"># &gt;&gt; Bu metot sınıf dışında kullanıma kapalıdır</span>\n<span class=\"cm-tag\">Metotlar</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">ozel_metot</span>\n<span class=\"cm-comment\"># ~&gt; ... private method `ozel_metot' called for #&lt;Metotlar:0x007f29b2d1f168&gt; (NoMethodError)</span>\n\n<span class=\"cm-tag\">Metotlar</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">send</span>(<span class=\"cm-atom\">:ozel_metot</span>)\n<span class=\"cm-comment\"># &gt;&gt; Bu metot sınıf dışında kullanıma kapalıdır</span></pre>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">101</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-102 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Korumalı Metotlar</h1>\n\n\n<h2>protected</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Protected metotlar, sınıf dışından çağırıldıklarında tıpkı private metotlar gibi davranırlar.</li>\n<li>Sınıf içerisinde ise public metotlar gibi davranırlar. Yani private metotlar gibi tek başına çağırılmaları yerine; bir nesne veya self üzerinden çağırılabilirler.</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">protected</span>\n\n<span class=\"cm-keyword\">def</span> <span class=\"cm-def\">a_private_method</span> \n  <span class=\"cm-comment\"># code</span>\n<span class=\"cm-keyword\">end</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">102</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-103 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Sınıflar ile İlgili Diğer Konular</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Monkey Patching</li>\n<li>Refinements</li>\n<li>Örnekler…</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">103</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-104 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Modüller</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Bir modül şunları barındırabilir:</p>\n<ul>\n<li>Sabitler</li>\n<li>Başka Modüller</li>\n<li>Sınıflar</li>\n<li>Metotlar</li>\n</ul>\n<p>Modül içerisindeki sabitlere erişmek için <code>::</code> kullanılır. Sınıf (veya modül) metotlarına ise normalde olduğu gibi <code>.</code> kullanarak erişebiliriz.</p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">104</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-105 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Modüller</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Modüller, sınıfların aksine sadece metotları ve bazen de sabitleri barındırmak için kullanılırlar</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">module</span> <span class=\"cm-tag\">Ornek</span>\n  <span class=\"cm-tag\">SABIT</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">26</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-atom\">Ornek:</span><span class=\"cm-atom\">:SABIT</span>   <span class=\"cm-comment\"># =&gt; 26</span></pre>\n<p>Bilindiği gibi sınıf ve modül isimleri de birer sabittir. Bu nedenle onlara erişirken de <code>::</code> notasyonunu kullanırız:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">module</span> <span class=\"cm-tag\">Ornek</span>\n  <span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">A</span>; <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n<span class=\"cm-atom\">Ornek:</span><span class=\"cm-atom\">:A</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>   <span class=\"cm-comment\"># =&gt; #&lt;Ornek::A:0x007fc417f5e3c0&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">105</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-106 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Modüller</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Modüller içerisinde tanımlı örnek metotlarına doğrudan erişemeyiz</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">module</span> <span class=\"cm-tag\">Ornek</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">metot</span>() <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Ornek Metodu\"</span> <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-tag\">Ornek</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">metot</span> <span class=\"cm-comment\"># ~&gt; undefined method `metot' for Ornek:Module (NoMethodError)</span></pre>\n<p>Bunun nedeni; kolayca anlaşılabileceği gibi modülleri kullanarak sınıflar gibi nesne oluşturamayız, ancak bir örneği bulunur o da kendisi…</p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">106</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-107 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Ad Alanları</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Doğrudan modül içerisinde tanımlı metotlar, sınıf metodu gibi tanımlandıklarında erişilebilirdirler. Bunu diğer dillerdeki ad alanları(name spaces)na benzetebiliriz.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">module</span> <span class=\"cm-tag\">Ornek</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-keyword\">self</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">metot</span>() <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Sınıf Metodu\"</span> <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n<span class=\"cm-tag\">Ornek</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">metot</span>   <span class=\"cm-comment\"># &gt;&gt; Sınıf Metodu</span></pre>\n<p>veya</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">module</span> <span class=\"cm-tag\">Ornek</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">metot</span>() <span class=\"cm-variable\">puts</span> <span class=\"cm-string\">\"Sınıf Metodu\"</span> <span class=\"cm-keyword\">end</span>\n\n  <span class=\"cm-variable\">module_function</span> <span class=\"cm-atom\">:metot</span>\n<span class=\"cm-keyword\">end</span>\n<span class=\"cm-tag\">Ornek</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">metot</span>    <span class=\"cm-comment\"># &gt;&gt; Sınıf Metodu</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">107</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-108 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>include Module</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Modülleri sınıflara dahil etmenin en çok kullanılan yolu <strong>include</strong> kullanmaktır. Bu sayede modül içerisindeki örnek metotlarını da kullanabiliriz:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">module</span> <span class=\"cm-tag\">Behavior</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">say_hi</span>() <span class=\"cm-string\">\"Hello\"</span> <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Person</span>\n  <span class=\"cm-variable\">include</span> <span class=\"cm-tag\">Behavior</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-tag\">Person</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">say_hi</span>  <span class=\"cm-comment\"># =&gt; \"Hello\"</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">Person</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">ancestors</span>  <span class=\"cm-comment\"># =&gt; [Person, Behavior, Object, Kernel, BasicObject]</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">108</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-109 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>include vs prepend</h1>\n\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">module</span> <span class=\"cm-tag\">Behavior</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">say_hi</span>() <span class=\"cm-string\">\"Hello\"</span> <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Person</span>\n  <span class=\"cm-variable\">include</span> <span class=\"cm-tag\">Behavior</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">say_hi</span>\n    <span class=\"cm-string\">\"Hello from Person class\"</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Human</span>\n  <span class=\"cm-variable\">prepend</span> <span class=\"cm-tag\">Behavior</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">say_hi</span>\n    <span class=\"cm-string\">\"Hello from Human class\"</span>\n  <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span></pre>\n\n</div>\n\n<div class=\"column column-2\">\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">Person</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">say_hi</span>  \n<span class=\"cm-comment\"># =&gt; \"Hello from Person class\"</span>\n<span class=\"cm-tag\">Human</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">say_hi</span>   \n<span class=\"cm-comment\"># =&gt; \"Hello\"</span>\n\n<span class=\"cm-tag\">Person</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">ancestors</span>   \n<span class=\"cm-comment\"># =&gt; [Person, Behavior, Object, Kernel, BasicObject]</span>\n<span class=\"cm-tag\">Human</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">ancestors</span>    \n<span class=\"cm-comment\"># =&gt; [Behavior, Human, Object, Kernel, BasicObject]</span></pre>\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">109</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-110 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>extend</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Modülleri sınıflara dahil etmenin diğer bir yolu da extend kullanmaktır. Bu durumda sınıfın  soyağacında herhangi bir değişiklik olmaz ve eklenen metotlar, sınıf metodu olarak kullanılabilirler.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">module</span> <span class=\"cm-tag\">Behavior</span>\n  <span class=\"cm-keyword\">def</span> <span class=\"cm-def\">say_hi</span>() <span class=\"cm-string\">\"Hello\"</span> <span class=\"cm-keyword\">end</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-keyword\">class</span> <span class=\"cm-tag\">Person</span>\n  <span class=\"cm-keyword\">extend</span> <span class=\"cm-tag\">Behavior</span>\n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-tag\">Person</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">say_hi</span>      <span class=\"cm-comment\"># =&gt; \"Hello\"</span>\n<span class=\"cm-tag\">Person</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">say_hi</span>  \n<span class=\"cm-comment\"># ~&gt; :undefined method `say_hi' for #&lt;Person:0x007f9e670e8bb8&gt; (NoMethodError)</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">110</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-111 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dosya İşlemleri</h1>\n\n\n<h2>File Class</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Ruby’de dosya işlemleri için <code>File</code> sınıfını kullanırız. Örneğin aşağıdaki kodları çalıştırdığımızda <strong>hello</strong> isminde bir dosya oluşturup içerisine de <em>Hello World</em> yazacaktır:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">open</span>(<span class=\"cm-string\">'hello'</span>, <span class=\"cm-string\">'w'</span>) <span class=\"cm-keyword\">do</span> |<span class=\"cm-def\">dosya</span>|\n  <span class=\"cm-variable\">dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">print</span> <span class=\"cm-string\">\"Hello World!\"</span>\n<span class=\"cm-keyword\">end</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">111</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-112 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dosya Acma Modları</h1>\n\n\n<h2>read, write, append</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Bir dosyayı açarken ilk seçenek olarak: <strong>dosya adı</strong>, ikinci seçenek olarak da açma modunu belirtiriz. Açma modu belirtilmezse; varsayılan değer olarak <strong>r</strong>(ead) değeri kabul edilecektir. Kullanılabilecek modlar şunlardır:</p>\n<ul>\n<li><strong>r</strong>(ead)</li>\n<li><strong>w</strong>(rite)</li>\n<li><strong>a</strong>(ppend)</li>\n</ul>\n<p>Eğer modlarin yaninda <strong>+</strong> işareti varsa bu çift mod kullanılacağı anlamına gelir:<br /><strong>“r+”</strong> : okuma ve yazma gibi…</p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">112</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-113 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dosya Açma ve Kapama</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Daha önce öğrendiğimiz gibi <code>open</code> veya <code>new</code> metodu ile birlikte bir blok kullanabiliyorduk. Eğer tüm işlemleri bu blok içerisinde yapıyorsak, bloğun sonuna ulaştığımızda dosya da otomatik olarak kapatılacaktır:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">open</span>(<span class=\"cm-string\">'hello'</span>, <span class=\"cm-string\">'w'</span>) <span class=\"cm-keyword\">do</span> |<span class=\"cm-def\">dosya</span>|\n  <span class=\"cm-variable\">dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">print</span> <span class=\"cm-string\">\"Hello World!\"</span>\n<span class=\"cm-keyword\">end</span></pre>\n<p>Eğer blok kullanımı işimizi görmüyorsa dosyayı şu şekilde açıp</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">dosya</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">open</span>(<span class=\"cm-string\">'hello'</span>, <span class=\"cm-string\">'w'</span>)</pre>\n<p>bu şekilde kapatabiliriz:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">close</span>()</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">113</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-114 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dosyaya Yazma</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Yazma modunda dosya daha önce yok ise oluşturulur, eğer daha önce oluşturulmuşsa içeriği sıfırlanır ve yeni değerler yazdırılır:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">open</span>(<span class=\"cm-string\">'hello'</span>, <span class=\"cm-string\">'w'</span>) <span class=\"cm-keyword\">do</span> |<span class=\"cm-def\">dosya</span>|\n  <span class=\"cm-variable\">dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">print</span> <span class=\"cm-string\">\"Hello World!\"</span>\n<span class=\"cm-keyword\">end</span></pre>\n<p>Dosyaya yazmak için <code>IO#print</code>, <code>IO#puts</code>veya <code>IO::write</code> metotlarından yararlanabiliriz.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">dosya</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">open</span>(<span class=\"cm-string\">'hello'</span>, <span class=\"cm-string\">'w'</span>)\n<span class=\"cm-variable\">dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">puts</span> <span class=\"cm-string\">'Hello World'</span>\n<span class=\"cm-variable\">dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">close</span></pre>\n<p>Eğer dosyanın sıfırlanmasını istemiyorsak <strong>a</strong>(ppend) modunu kullanabiliriz. Bu durumda içerik dosyanın sonuna eklenecektir.</p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">114</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-115 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dosyayı Okuma (1 / 3)</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Dosyayı okumak için <code>IO::read</code> veya <code>IO#read</code> metotlarını kullanabiliriz; read metoduna kaç byte okumasını istediğimiz söyleyebiliriz, aksi durumda dosyanın tamamını (EOF’ye kadar) okuyacaktır.</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">open</span>(<span class=\"cm-string\">'hello'</span>, <span class=\"cm-string\">'r'</span>) <span class=\"cm-keyword\">do</span> |<span class=\"cm-def\">dosya</span>| \n    <span class=\"cm-comment\"># Tüm dosya içeriğini oku</span>\n    <span class=\"cm-variable\">tum_icerik</span>             <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">read</span> \n    <span class=\"cm-variable\">belli_uzunlukta_icerik</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">read</span>(<span class=\"cm-number\">32</span>)\n<span class=\"cm-keyword\">end</span></pre>\n<p>Bu metodu kullanırken dikkat edilmesi gereken en önemli nokta: bir sonraki read metot çağrısının, önceki çağrıda kalınan noktadan başlayacağıdır.</p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">115</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-116 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dosyayı Okuma (2 / 3)</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Eğer okumak istediğimiz dosya içeriği belirli bir karakter kullanarak ayrılmış ise; bu durumda <code>IO#readline</code>, <code>IO::readlines</code> veya <code>IO#readlines</code> metotlarını kullanmak daha doğru bir seçim olacaktır. Örneğin içeriği virgül ile ayrılmış olan bir dosyayı aşağıdaki gibi okuyabiliriz:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">open</span>(<span class=\"cm-string\">'hello'</span>, <span class=\"cm-string\">'r'</span>)<span class=\"cm-operator\">.</span><span class=\"cm-variable\">readlines</span>(<span class=\"cm-string\">','</span>)<span class=\"cm-operator\">.</span><span class=\"cm-variable\">each</span> <span class=\"cm-keyword\">do</span> |<span class=\"cm-def\">line</span>|\n    <span class=\"cm-variable\">puts</span> <span class=\"cm-variable\">line</span> \n<span class=\"cm-keyword\">end</span>\n\n<span class=\"cm-comment\"># &gt;&gt; ali,</span>\n<span class=\"cm-comment\"># &gt;&gt; veli,</span>\n<span class=\"cm-comment\"># &gt;&gt; nuri,</span></pre>\n<p><code>readline</code> metodu da benzer şekilde satırları tek tek okumamıza imkan tanıyacaktır.</p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">116</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-117 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dosyayı Okuma (3 / 3)</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p><code>readlines</code> metodu geriye bir dizi döndürmektedir ve bu sayede dizinin istenilen elemanına erişebiliriz: </p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">dosya</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>(<span class=\"cm-string\">'dosya'</span>)\n<span class=\"cm-variable\">puts</span> <span class=\"cm-variable\">dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">readlines</span>[<span class=\"cm-number\">0</span>]   <span class=\"cm-comment\"># ilk satiri yazar</span>\n<span class=\"cm-variable\">puts</span> <span class=\"cm-variable\">dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">readlines</span>[<span class=\"cm-number\">9</span>]  <span class=\"cm-comment\"># onuncu satiri yazar</span>\n<span class=\"cm-variable\">puts</span> <span class=\"cm-variable\">dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">readlines</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">last</span> <span class=\"cm-comment\"># son satiri yazar</span>\n<span class=\"cm-variable\">dosya</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">close</span></pre>\n<p>Eğer daha önceki örnekteki gibi tüm satırları bir blok içerisinde kullanacaksak <code>readlines.each</code> yerine sadece <code>each</code> veya <code>each_line</code> metotlarını da kullanabiliriz:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">open</span>(<span class=\"cm-string\">'hello'</span>)<span class=\"cm-operator\">.</span><span class=\"cm-variable\">each</span>(<span class=\"cm-string\">','</span>)      { |<span class=\"cm-def\">line</span>| <span class=\"cm-variable\">puts</span> <span class=\"cm-variable\">line</span> }</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">open</span>(<span class=\"cm-string\">'hello'</span>)<span class=\"cm-operator\">.</span><span class=\"cm-variable\">each_line</span>(<span class=\"cm-string\">','</span>) { |<span class=\"cm-def\">line</span>| <span class=\"cm-variable\">puts</span> <span class=\"cm-variable\">line</span> }</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">117</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-118 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dosyalarla İlgili Bazı Metotlar</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">exist?</span>     <span class=\"cm-string\">'dosya'</span> \n<span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">file?</span>      <span class=\"cm-string\">'dosya'</span>\n<span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">directory?</span> <span class=\"cm-string\">'dizin'</span>\n<span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">readable?</span>  <span class=\"cm-string\">'dosya'</span>\n<span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">writable?</span>  <span class=\"cm-string\">'dosya'</span>\n<span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">size</span>       <span class=\"cm-string\">'dosya'</span>\n<span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">zero?</span>      <span class=\"cm-string\">'dosya'</span>\n<span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">ftype</span>      <span class=\"cm-string\">'dosya'</span>\n<span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">birthtime</span>  <span class=\"cm-string\">'dosya'</span>\n<span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">ctime</span>      <span class=\"cm-string\">'dosya'</span>\n<span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">mtime</span>      <span class=\"cm-string\">'dosya'</span>\n<span class=\"cm-tag\">File</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">atime</span>      <span class=\"cm-string\">'dosya'</span></pre>\n<p>File sınıfı hakkında daha fazla bilgi edinmek için <a href=\"http://ruby-doc.org/core-2.2.0/File.html\" target=\"_blank\">http://ruby-doc.org/core-2.2.0/File.html</a></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">118</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-119 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Tarih ve Saat İşlemleri</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Ruby, tarih ve saat işlemleri için <strong>Time</strong> sınıfını sunar. Bu sınıftan yeni bir örnek ürettiğimizde o anki tarih ve saati içeren bir nesne elde ederiz:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">Time</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span> <span class=\"cm-comment\"># =&gt; 2015-01-20 12:42:54 +0200</span></pre>\n<p>Aynı işlemi <code>Time::now</code> metodu ile de yapabiliriz:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">Time</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">now</span> <span class=\"cm-comment\"># =&gt; 2015-01-20 12:42:54 +0200</span></pre>\n<p>Time::new metodu argümanlarla birlikte kullanıldığında farklı tarihler oluşturulabilir:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">Time</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>(<span class=\"cm-variable\">year</span>, <span class=\"cm-variable\">month</span><span class=\"cm-operator\">=</span><span class=\"cm-keyword\">nil</span>, <span class=\"cm-variable\">day</span><span class=\"cm-operator\">=</span><span class=\"cm-keyword\">nil</span>, <span class=\"cm-variable\">hour</span><span class=\"cm-operator\">=</span><span class=\"cm-keyword\">nil</span>, <span class=\"cm-variable\">min</span><span class=\"cm-operator\">=</span><span class=\"cm-keyword\">nil</span>, <span class=\"cm-variable\">sec</span><span class=\"cm-operator\">=</span><span class=\"cm-keyword\">nil</span>, <span class=\"cm-variable\">utc_offset</span><span class=\"cm-operator\">=</span><span class=\"cm-keyword\">nil</span>)</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-tag\">Time</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">new</span>(<span class=\"cm-number\">2010</span>,<span class=\"cm-number\">05</span>,<span class=\"cm-number\">20</span>,<span class=\"cm-number\">00</span>,<span class=\"cm-number\">22</span>,<span class=\"cm-number\">00</span>, <span class=\"cm-string\">\"+05:00\"</span>)  <span class=\"cm-comment\"># =&gt; 2010-05-20 00:22:00 +0500</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">119</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-120 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Tarih ve Saatin Bölümleri</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Bir tarih/saat bilgisinin gün, ay … gibi bölümlerine erişmek oldukça kolaydır:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">simdi</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Time</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">now</span>  <span class=\"cm-comment\"># =&gt; 2015-01-20 12:42:54 +0200</span>\n\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">year</span>        <span class=\"cm-comment\"># =&gt; 2015</span>\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">month</span>       <span class=\"cm-comment\"># =&gt; 1</span>\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">day</span>         <span class=\"cm-comment\"># =&gt; 20</span>\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">hour</span>        <span class=\"cm-comment\"># =&gt; 12</span>\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">min</span>         <span class=\"cm-comment\"># =&gt; 42</span>\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">sec</span>         <span class=\"cm-comment\"># =&gt; 54</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">120</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-121 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Tarih ve Saat ile İlgili Bazı Metotlar (1 / 2)</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Hangi günde olduğumuzu da öğrenebiliriz:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">sunday?</span>    <span class=\"cm-comment\"># =&gt; false</span>\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">monday?</span>    <span class=\"cm-comment\"># =&gt; true</span>\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">tuesday?</span>   <span class=\"cm-comment\"># =&gt; false</span>\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">wednesday?</span> <span class=\"cm-comment\"># =&gt; false</span>\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">thursday?</span>  <span class=\"cm-comment\"># =&gt; false</span>\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">friday?</span>    <span class=\"cm-comment\"># =&gt; false</span>\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">saturday?</span>  <span class=\"cm-comment\"># =&gt; false</span></pre>\n<p>Haftanın veya yılın kaçıncı günü olduğunu öğrenebiliriz:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">wday</span> <span class=\"cm-comment\"># =&gt; 1</span>\n<span class=\"cm-variable\">simdi</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">yday</span> <span class=\"cm-comment\"># =&gt; 32</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">121</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-122 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Tarih ve Saat ile İlgili Bazı Metotlar (2 / 2) </h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Strıng olarak verilen bir metni tarihe dönüştürmek için <code>parse</code> metodunu kullanabiliriz. Ancak bu metot varsayılan olarak Time sınıfı içerisinde yer almamaktadır; bu nedenle aynı isimli modülü de dahil etmemiz gerekecektir:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-keyword\">require</span> <span class=\"cm-string\">'time'</span>\n\n<span class=\"cm-variable\">zaman</span> <span class=\"cm-operator\">=</span> <span class=\"cm-tag\">Time</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">parse</span>(<span class=\"cm-string\">'2014-02-03 01:37:23 +0200'</span>) <span class=\"cm-comment\"># =&gt; 2014-02-03 01:37:23 +0200</span>\n<span class=\"cm-variable\">zaman</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">year</span> <span class=\"cm-comment\"># =&gt; 2014</span></pre>\n<p>Tarih bileşenlerinin sıralanmasını değiştirmek istersek <code>strftime</code> metodunu kullanabiliriz:</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-github\"><span class=\"cm-variable\">zaman</span><span class=\"cm-operator\">.</span><span class=\"cm-variable\">strftime</span>(<span class=\"cm-string\">'%d/%m/%Y %H:%M:%S'</span>)  <span class=\"cm-comment\"># =&gt; \"03/02/2014 01:37:23\"</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">122</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-123 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Standart Kütüphane Tarih/Saat Sınıfları</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Eğer Time sınıfı tek başına yeterli gelmiyorsa; Ruby standart kütüphanesinde benzeri amaçlarla kullanılabilecek iki kütüphane daha yer almaktadır:</p>\n<p><strong>Date</strong><br /><a href=\"http://ruby-doc.org/stdlib-2.2.0/libdoc/date/rdoc/Date.html\" target=\"_blank\">http://ruby-doc.org/stdlib-2.2.0/libdoc/date/rdoc/Date.html</a></p>\n<p><strong> DateTime</strong><br /><a href=\"http://ruby-doc.org/stdlib-2.2.0/libdoc/date/rdoc/DateTime.html\" target=\"_blank\">http://ruby-doc.org/stdlib-2.2.0/libdoc/date/rdoc/DateTime.html</a></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">123</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-124 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>slides.last.end?</h1>\n\n\n<h2>=&gt; false</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Ruby dünyasında gezintimizin sonuna ulaştık, ancak siz bununla yetinmeyin.</p>\n<p><strong>Ruby hakkında daha fazla şey öğrenin</strong><br /><a href=\"http://www.rubykitabi.com\" target=\"_blank\">http://www.rubykitabi.com</a></p>\n<p><strong>Ruby on Rails ile web uygulamaları geliştirin</strong><br /><a href=\"http://www.dikeyeksen.com/products/ruby-on-rails\" target=\"_blank\">http://www.dikeyeksen.com/products/ruby-on-rails</a></p>\n<p><strong>Ruby Türkiye Topluluğana katılın</strong><br /><a href=\"http://www.rubyturkiye.org/\" target=\"_blank\">http://www.rubyturkiye.org/</a></p>\n<p><strong>Türkçe Ruby podcast kanalına abone olun</strong><br /><a href=\"http://yakutpodcast.tumblr.com/\" target=\"_blank\">http://yakutpodcast.tumblr.com/</a></p>\n<p><strong>…</strong></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">LYK 2015 | Serdar Doğruyol &amp; Barış Çimen</span>\n<span class=\"presentation-pagination\">124</span>\n\n\t</footer>\n</div>\n\n</div>"
];